import{ar as e,as as t,at as i,J as a,cD as s,G as r,I as l,cW as n,cX as o,cY as h,cZ as c,F as u,V as p,bQ as m}from"./vendor.6e209a4d.js";import{r as f}from"./BitmapTileLayerView2D.5f1142bf.js";import{l as y,d}from"./LayerView.e6fb419e.js";import{s as g}from"./clickToleranceUtils.bcc7d4ae.js";import{a as w}from"./drapedUtils.c6ea3374.js";import"./BitmapTileContainer.ccaaa2c6.js";import"./Bitmap.8b53ffa8.js";import"./VertexArrayObject.59d5ee02.js";import"./Texture.3086c6ff.js";import"./Container.2fe15eee.js";import"./mat4f32.9c1247c6.js";import"./TileContainer.e2ef7d5c.js";import"./Utils.ab398aa7.js";import"./WGLContainer.e0524ef7.js";import"./definitions.8ca8ae21.js";import"./ShaderCompiler.b1ea523b.js";import"./config.042ea55e.js";import"./GeometryUtils.c1792d3b.js";import"./MaterialKey.a25e277c.js";import"./earcut.b5c0cad1.js";const _=l=>{let n=class extends l{async fetchPopupFeatures(e,t){const{layer:i}=this;if(!e)return Promise.reject(new a("tilelayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:i}));if("tile"!==i.type)return Promise.reject(new a("tilelayerview:fetchPopupFeatures","Layer type should be 'tile'",{type:i.type}));const l=this.get("view.scale"),n=i.allSublayers.toArray().filter((e=>{const t=0===e.minScale||l<=e.minScale,i=0===e.maxScale||l>=e.maxScale;return e.popupTemplate&&e.popupEnabled&&e.visible&&t&&i}));return s(n.map((async i=>{const a=i.createQuery(),s=r(t)?t.event:null,l=g({renderer:i.renderer,event:s});return a.geometry=this.createFetchPopupFeaturesQueryGeometry(e,l),a.outFields=await i.popupTemplate.getRequiredFields(),(await i.queryFeatures(a)).features}))).then((e=>[].concat(...e.map((e=>e.value)).filter(Boolean))))}};return e([t()],n.prototype,"layer",void 0),n=e([i("esri.layers.mixins.TileLayerView")],n),n},I=l.getLogger("esri.views.2d.layers.TileLayerView2D"),v=[0,0];let T=class extends(_(n(f(y(d))))){constructor(){super(...arguments),this._tileStrategy=null,this._fetchQueue=null,this.layer=null}initialize(){const e=this.layer.tileInfo,t=e&&e.spatialReference;let i;t||(i=new a("layerview:tiling-information-missing","The layer doesn't provide tiling information",{layer:this.layer})),t.equals(this.view.spatialReference)||(i=new a("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer})),this.watch("resampling",(()=>{this.refresh()})),i&&this.addResolvingPromise(Promise.reject(i))}get resampling(){return!("resampling"in this.layer)||!1!==this.layer.resampling}hitTest(){return null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this.notifyChange("updating")}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null;this._tileInfoView=new o(this.layer.tileInfo,this.layer.fullExtent),this._fetchQueue=new h({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(e,t)=>this.fetchTile(e,t)}),this._tileStrategy=new c({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),this.requestUpdate(),this.container.requestRender(),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._fetchQueue=this._tileStrategy=this._tileInfoView=null}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQueryGeometry(e,t){return w(e,t,this.view)}async doRefresh(){this.updateRequested||this.suspended||(this._fetchQueue.reset(),this._tileStrategy.tiles.forEach((e=>this._enqueueTileFetch(e))),this.notifyChange("updating"))}isUpdating(){var e;return(null==(e=this._fetchQueue)?void 0:e.length)>0}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(v,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._enqueueTileFetch(t),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",(()=>e.destroy())),this.requestUpdate()}async fetchTile(e,t){const i="tilemapCache"in this.layer?this.layer.tilemapCache:null,a=!u(t)&&t.signal;if(!i)try{return await this._fetchImage(e,a)}catch(h){if(!p(h)&&!this.resampling)return this._createBlankImage();throw h}const s=new m(0,0,0,0);let r;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,s,{signal:a}),s.level!==e.level&&!this.resampling)return this._createBlankImage();r=await this._fetchImage(s,a)}catch(h){if(p(h))throw h;r=await this._fetchImage(e,a)}const{level:l,row:n,col:o}=s;return this.resampling&&l!==e.level?this._resampleImage(r,l,n,o,e.level,e.row,e.col):r}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",(()=>this.requestUpdate()))}catch(t){p(t)||I.error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchTile(e.level,e.row,e.col,{timestamp:this.refreshTimestamp,signal:t})}_resampleImage(e,t,i,a,s,r,l){const n=this._tileInfoView.tileInfo.size,o=this._tileInfoView.getTileResolution(t),h=this._tileInfoView.getTileResolution(s);let c=this._tileInfoView.getLODInfoAt(s);const u=c.getXForColumn(l),p=c.getYForRow(r);c=this._tileInfoView.getLODInfoAt(t);const m=c.getXForColumn(a),f=c.getYForRow(i),y=Math.round((u-m)/o),d=Math.round(-(p-f)/o),g=Math.round(n[0]*(h/o)),w=Math.round(n[1]*(h/o)),_=this._createBlankImage();return _.getContext("2d").drawImage(e,y,d,g,w,0,0,n[0],n[1]),_}_createBlankImage(){const e=this._tileInfoView.tileInfo.size,t=document.createElement("canvas");return[t.width,t.height]=e,t}};e([t()],T.prototype,"resampling",null),T=e([i("esri.views.2d.layers.TileLayerView2D")],T);var V=T;export{V as default};
