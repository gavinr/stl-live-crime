import{J as t,as as e,at as i,e2 as s,au as n,d2 as l,K as r,G as o,bA as a}from"./vendor.0f6f771b.js";var h;const f=t.getLogger("esri.layers.support.PixelBlock");let u=h=class extends l{constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(t,e){return new(h.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"u32":e=Uint32Array;break;case"f32":e=Float32Array;break;case"f64":e=Float64Array;break;case"c64":case"c128":case"unknown":e=Float32Array}return e}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].indexOf(e)>-1?e="u8":-1===["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].indexOf(e)&&(e="f32"),e}getPlaneCount(){return this.pixels&&this.pixels.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new r("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(t)for(let i=0;i<t.length;i++)t[i]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t)return;let e;switch(t){case"u8":e=[0,255];break;case"u16":e=[0,65535];break;case"u32":e=[0,4294967295];break;case"s8":e=[-128,127];break;case"s16":e=[-32768,32767];break;case"s32":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[i,s]=e,n=this.pixels,l=this.width*this.height,r=n.length;let o,a,f;const u=[];for(let c=0;c<r;c++){f=h.createEmptyBand(t,l),o=n[c];for(let t=0;t<l;t++)a=o[t],f[t]=a>s?s:a<i?i:a;u.push(f)}this.pixels=u,this.pixelType=t}extractBands(t){if(o(t)||0===t.length||null==this.pixels||0===this.pixels.length)return this;const e=this.pixels.length,i=t.some((t=>t>=this.pixels.length)),s=e===t.length&&!t.some(((t,e)=>t!==e));return i||s?this:new h({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>this.pixels[t])),statistics:this.statistics&&t.map((t=>this.statistics[t]))})}clone(){const t=new h({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const i=h.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const s=this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=s?this.pixels[e].slice(0,this.pixels[e].length):new i(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=a(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:i,pixels:s}=this;if(!t||!s||!s.length)return void f.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let n,l,r,o;n=l=r=s[0],s.length>=3?(l=s[1],r=s[2]):2===s.length&&(l=s[1]);const a=new Uint32Array(t),h=this.width*this.height;if(n.length===h)if(e&&e.length===h)if(i)for(o=0;o<h;o++)e[o]&&(a[o]=e[o]<<24|r[o]<<16|l[o]<<8|n[o]);else for(o=0;o<h;o++)e[o]&&(a[o]=255<<24|r[o]<<16|l[o]<<8|n[o]);else for(o=0;o<h;o++)a[o]=255<<24|r[o]<<16|l[o]<<8|n[o];else f.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:i,statistics:s}=this;if(!t||!e||!e.length)return void f.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const n=this.pixelType;let l=1,r=0,o=1;if(s&&s.length>0)r=s.map((t=>t.minValue)).reduce(((t,e)=>Math.min(t,e))),o=s.map((t=>t.maxValue-t.minValue)).reduce(((t,e)=>Math.max(t,e))),l=255/o;else{let t=255;"s8"===n?(r=-128,t=127):"u16"===n?t=65535:"s16"===n?(r=-32768,t=32767):"u32"===n?t=4294967295:"s32"===n?(r=-2147483648,t=2147483647):"f32"===n?(r=-34e38,t=34e38):"f64"===n&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),l=255/(t-r)}const a=new Uint32Array(t),h=this.width*this.height;let u,c,p,x,m;if(u=c=p=e[0],u.length!==h)return f.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(c=e[1],e.length>=3&&(p=e[2]),i&&i.length===h)for(x=0;x<h;x++)i[x]&&(a[x]=255<<24|(p[x]-r)*l<<16|(c[x]-r)*l<<8|(u[x]-r)*l);else for(x=0;x<h;x++)a[x]=255<<24|(p[x]-r)*l<<16|(c[x]-r)*l<<8|(u[x]-r)*l;else if(i&&i.length===h)for(x=0;x<h;x++)m=(u[x]-r)*l,i[x]&&(a[x]=255<<24|m<<16|m<<8|m);else for(x=0;x<h;x++)m=(u[x]-r)*l,a[x]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:i}=this;if(!t||!e||!e.length)return f.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let s,n,l,r;s=n=l=e[0],e.length>=3?(n=e[1],l=e[2]):2===e.length&&(n=e[1]);const o=this.width*this.height;if(s.length!==o)return f.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let a=0;if(i&&i.length===o)for(r=0;r<o;r++)t[a++]=s[r],t[a++]=n[r],t[a++]=l[r],t[a++]=1&i[r];else for(r=0;r<o;r++)t[a++]=s[r],t[a++]=n[r],t[a++]=l[r],t[a++]=1}_calculateBandStatistics(t,e){let i=1/0,s=-1/0;const n=t.length;let l,r=0;if(e)for(l=0;l<n;l++)e[l]&&(r=t[l],i=r<i?r:i,s=r>s?r:s);else for(l=0;l<n;l++)r=t[l],i=r<i?r:i,s=r>s?r:s;return{minValue:i,maxValue:s}}};e([i({json:{write:!0}})],u.prototype,"width",void 0),e([i({json:{write:!0}})],u.prototype,"height",void 0),e([i({json:{write:!0}})],u.prototype,"pixelType",void 0),e([s("pixelType")],u.prototype,"castPixelType",null),e([i({json:{write:!0}})],u.prototype,"validPixelCount",void 0),e([i({json:{write:!0}})],u.prototype,"mask",void 0),e([i({json:{write:!0}})],u.prototype,"maskIsAlpha",void 0),e([i({json:{write:!0}})],u.prototype,"pixels",void 0),e([i({json:{write:!0}})],u.prototype,"statistics",void 0),u=h=e([n("esri.layers.support.PixelBlock")],u);var c=u;const p=function(t){return t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0};function x(t,e){if(null==e||!e.length||!p(t))return t;const i=t.pixels.length;return e&&e.some((t=>t>=i))||1===i&&1===e.length&&0===e[0]?t:i!==e.length||e.some(((t,e)=>t!==e))?new c({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function m(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const i=e.sort(((t,e)=>t[0]-e[0]));let s=0;i[0][0]<0&&(s=i[0][0]);const n=Math.max(256,i[i.length-1][0]-s+1),l=new Uint8Array(4*n),r=[];let o,a=0,h=0;const f=5===i[0].length;if(n>65536)return i.forEach((t=>{r[t[0]-s]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:s,alphaSpecified:f};if(t.fillUnspecified)for(o=i[h],a=o[0]-s;a<n;a++)l[4*a]=o[1],l[4*a+1]=o[2],l[4*a+2]=o[3],l[4*a+3]=f?o[4]:255,a===o[0]-s&&(o=h===i.length-1?o:i[++h]);else for(a=0;a<i.length;a++)o=i[a],h=4*(o[0]-s),l[h]=o[1],l[h+1]=o[2],l[h+2]=o[3],l[h+3]=f?o[4]:255;return{indexedColormap:l,offset:s,alphaSpecified:f}}function d(t,e){if(!p(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const i=t.clone(),s=i.pixels;let n=i.mask;const l=i.width*i.height;if(1!==s.length)return t;const{indexedColormap:r,indexed2DColormap:o,offset:a,alphaSpecified:h}=e,f=r.length-1;let u=0;const c=s[0],x=new Uint8Array(c.length),m=new Uint8Array(c.length),d=new Uint8Array(c.length);let g,y=0;if(r)if(n)for(u=0;u<l;u++)n[u]&&(y=4*(c[u]-a),y<a||y>f?n[u]=0:(x[u]=r[y],m[u]=r[y+1],d[u]=r[y+2],n[u]=r[y+3]));else{for(n=new Uint8Array(l),u=0;u<l;u++)y=4*(c[u]-a),y<a||y>f?n[u]=0:(x[u]=r[y],m[u]=r[y+1],d[u]=r[y+2],n[u]=r[y+3]);i.mask=n}else if(n)for(u=0;u<l;u++)n[u]&&(g=o[c[u]],x[u]=g[0],m[u]=g[1],d[u]=g[2],n[u]=g[3]);else{for(n=new Uint8Array(l),u=0;u<l;u++)g=o[c[u]],x[u]=g[0],m[u]=g[1],d[u]=g[2],n[u]=g[3];i.mask=n}return i.pixels=[x,m,d],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=h,i}function g(t){if(!p(t))return null;t.statistics||t.updateStatistics();const{pixels:e,mask:i,pixelType:s,statistics:n}=t,l=t.width*t.height,r=e.length;let o,a,h,f,u;const c=[],x=[];let m,d,g,y,w,k,A,M,v,b;const U=256;for(f=0;f<r;f++){if(m=new Uint32Array(U),g=e[f],"u8"===s)if(o=-.5,a=255.5,i)for(u=0;u<l;u++)i[u]&&m[g[u]]++;else for(u=0;u<l;u++)m[g[u]]++;else{if(o=n[f].minValue,a=n[f].maxValue,h=(a-o)/U,d=new Uint32Array(257),i)for(u=0;u<l;u++)i[u]&&d[Math.floor((g[u]-o)/h)]++;else for(u=0;u<l;u++)d[Math.floor((g[u]-o)/h)]++;for(u=0;u<255;u++)m[u]=d[u];m[255]=d[255]+d[256]}for(c.push({min:o,max:a,size:U,counts:m}),y=0,w=0,M=0,u=0;u<U;u++)y+=m[u],w+=u*m[u];for(v=w/y,u=0;u<U;u++)M+=m[u]*(u-v)**2;b=Math.sqrt(M/(y-1)),h=(a-o)/U,k=(v+.5)*h+o,A=b*h,x.push({min:o,max:a,avg:k,stddev:A})}return{statistics:x,histograms:c}}function y(t){const e=[];for(let i=0;i<t.length;i++){const{min:s,max:n,size:l,counts:r}=t[i];let o=0,a=0;for(let t=0;t<l;t++)o+=r[t],a+=t*r[t];const h=a/o;let f=0;for(let t=0;t<l;t++)f+=r[t]*(t-h)**2;const u=(n-s)/l,c=(h+.5)*u+s,p=Math.sqrt(f/(o-1))*u;e.push({min:s,max:n,avg:c,stddev:p})}return e}function w(t){const{minCutOff:e,maxCutOff:i,gamma:s,pixelType:n}=t,l=t.outMin||0,r=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(n))return null;const o=e.length;let a,h,f=0;"s8"===n?f=-127:"s16"===n&&(f=-32767);let u=256;["u16","s16"].indexOf(n)>-1&&(u=65536);const c=[],p=[],x=r-l;for(a=0;a<o;a++)p[a]=i[a]-e[a],c[a]=x/(i[a]-e[a]);const m=s&&s.length>=o,d=[];if(m)for(a=0;a<o;a++)s[a]>1?s[a]>2?d[a]=6.5+(s[a]-2)**2.5:d[a]=6.5+100*(2-s[a])**4:d[a]=1;let g;const y=[];let w,k,A;if(m)for(a=0;a<o;a++){for(A=[],h=0;h<u;h++)w=h+f,g=(w-e[a])/p[a],k=1,s[a]>1&&(k-=(1/x)**(g*d[a])),w<i[a]&&w>e[a]?A[h]=Math.floor(k*x*g**(1/s[a]))+l:w>=i[a]?A[h]=r:A[h]=l;y[a]=A}else for(a=0;a<o;a++){for(A=[],h=0;h<u;h++)w=h+f,w<=e[a]?A[h]=l:w>=i[a]?A[h]=r:A[h]=Math.floor((w-e[a])/p[a]*x)+l;y[a]=A}if(null!=t.contrastOffset){const e=function(t,e){const i=Math.min(Math.max(t,-100),100),s=Math.min(Math.max(e,-100),100),n=255,l=128;let r,o;const a=new Uint8Array(256);for(r=0;r<256;r++)i>0&&i<100?o=(200*r-100*n+2*n*s)/(2*(100-i))+l:i<=0&&i>-100?o=(200*r-100*n+2*n*s)*(100+i)/2e4+l:100===i?(o=200*r-100*n+(n+1)*(100-i)+2*n*s,o=o>0?n:0):-100===i&&(o=l),a[r]=o>n?n:o<0?0:o;return a}(t.contrastOffset,t.brightnessOffset);for(a=0;a<o;a++)for(A=y[a],h=0;h<u;h++)A[h]=e[A[h]]}return{lut:y,offset:f}}function k(t,e=256){e=Math.min(e,256);const{size:i,counts:s}=t,n=new Uint8Array(i),l=s.reduce(((t,i)=>t+i/e),0);let r=0,o=0,a=0,h=l;for(let f=0;f<i;f++)if(a+=s[f],!(f<i-1&&a+s[f+1]<h)){for(;r<e-1&&h<a;)r++,h+=l;for(let t=o;t<=f;t++)n[t]=r;o=f+1}for(let f=o;f<i;f++)n[f]=e-1;return n}function A(t,e){if(!p(t))return null;const i=t.clone(),{pixels:s,mask:n}=i,{minCutOff:l,maxCutOff:r,gamma:o}=e,a=e.outMin||0,h=e.outMax||255,f=i.width*i.height,u=s.length;let c,x,m,d,g;const y=h-a,w=[],k=[];for(c=0;c<u;c++)k[c]=r[c]-l[c],w[c]=y/(r[c]-l[c]);const A=o&&o.length>=u,M=[];if(A)for(c=0;c<u;c++)o[c]>1?o[c]>2?M[c]=6.5+(o[c]-2)**2.5:M[c]=6.5+100*(2-o[c])**4:M[c]=1;if(A)if(null!=n){for(x=0;x<f;x++)if(n[x])for(c=0;c<u;c++)m=s[c][x],g=(m-l[c])/k[c],d=1,o[c]>1&&(d-=(1/y)**(g*M[c])),m<r[c]&&m>l[c]?s[c][x]=Math.floor(d*y*g**(1/o[c]))+a:m>=r[c]?s[c][x]=h:s[c][x]=a}else for(x=0;x<f;x++)for(c=0;c<u;c++)m=s[c][x],g=(m-l[c])/k[c],d=1,o[c]>1&&(d-=(1/y)**(g*M[c])),m<r[c]&&m>l[c]?s[c][x]=Math.floor(d*y*g**(1/o[c]))+a:m>=r[c]?s[c][x]=h:s[c][x]=a;else if(null!=n){for(x=0;x<f;x++)if(n[x])for(c=0;c<u;c++)m=s[c][x],m<r[c]&&m>l[c]?s[c][x]=Math.floor((m-l[c])/k[c]*y)+a:m>=r[c]?s[c][x]=h:s[c][x]=a}else for(x=0;x<f;x++)for(c=0;c<u;c++)m=s[c][x],m<r[c]&&m>l[c]?s[c][x]=Math.floor((m-l[c])/k[c]*y)+a:m>=r[c]?s[c][x]=h:s[c][x]=a;return i.pixelType="u8",i.updateStatistics(),i}function M(t,e){if(!p(t))return null;const{pixels:i,mask:s}=t,n=t.width*t.height,l=i.length;let r=e.lut;const{offset:o}=e;let a,h;r&&1===r[0].length&&(r=i.map((()=>r)));const f=[];let u,x,m;if(o)if(null==s)for(a=0;a<l;a++){for(u=i[a],x=r[a],m=new Uint8Array(n),h=0;h<n;h++)m[h]=x[u[h]-o];f.push(m)}else for(a=0;a<l;a++){for(u=i[a],x=r[a],m=new Uint8Array(n),h=0;h<n;h++)s[h]&&(m[h]=x[u[h]-o]);f.push(m)}else if(null==s)for(a=0;a<l;a++){for(u=i[a],x=r[a],m=new Uint8Array(n),h=0;h<n;h++)m[h]=x[u[h]];f.push(m)}else for(a=0;a<l;a++){for(u=i[a],x=r[a],m=new Uint8Array(n),h=0;h<n;h++)s[h]&&(m[h]=x[u[h]]);f.push(m)}const d=new c({width:t.width,height:t.height,pixels:f,mask:s,pixelType:"u8"});return d.updateStatistics(),d}function v(t,e){if(!p(t))return null;const i=t.clone(),{pixels:s}=i,n=i.width*i.height,l=e.length,r=Math.floor(l/2),o=e[Math.floor(r)],a=s[0];let h,f,u,c,x,m,d=!1;const g=new Uint8Array(n),y=new Uint8Array(n),w=new Uint8Array(n);let k=i.mask;const A=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(n),k.fill(A?255:1),i.mask=k),x=0;x<n;x++)if(k[x]){for(h=a[x],d=!1,m=r,f=o,u=0,c=l-1;c-u>1;){if(h===f.value){d=!0;break}h>f.value?u=m:c=m,m=Math.floor((u+c)/2),f=e[Math.floor(m)]}d||(h===e[u].value?(f=e[u],d=!0):h===e[c].value?(f=e[c],d=!0):h<e[u].value?(d=!1,f=null):h>e[u].value&&(h<e[c].value?(f=e[u],d=!0):c===l-1?(d=!1,f=null):(f=e[c],d=!0))),d?(g[x]=f.mappedColor[0],y[x]=f.mappedColor[1],w[x]=f.mappedColor[2],k[x]=f.mappedColor[3]):g[x]=y[x]=w[x]=k[x]=0}return i.pixels=[g,y,w],i.mask=k,i.pixelType="u8",i.maskIsAlpha=A,i}function b(t,e){if(!t||0===t.length)return null;const i=t.filter((t=>t.pixelBlock))[0];if(!i)return null;const s=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,n=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,l=.01*Math.min(s,n),r=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>l?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>l?t.extent.xmin-e.extent.xmin:0)),o=Math.min.apply(null,r.map((t=>t.extent.xmin))),a=Math.min.apply(null,r.map((t=>t.extent.ymin))),h=Math.max.apply(null,r.map((t=>t.extent.xmax))),f=Math.max.apply(null,r.map((t=>t.extent.ymax))),u={x:Math.round((e.xmin-o)/s),y:Math.round((f-e.ymax)/n)},c={width:Math.round((h-o)/s),height:Math.round((f-a)/n)},p={width:Math.round((e.xmax-e.xmin)/s),height:Math.round((e.ymax-e.ymin)/n)};return Math.round(c.width/i.pixelBlock.width)*Math.round(c.height/i.pixelBlock.height)!==r.length||u.x<0||u.y<0||c.width<p.width||c.height<p.height?null:{extent:e,pixelBlock:B(r.map((t=>t.pixelBlock)),c,u,p)}}function U(t,e,i,s,n,l){const{width:r,height:o}=i.block,{x:a,y:h}=i.offset,{width:f,height:u}=i.mosaic,c=function(t,e,i,s,n,l,r,o){return{xmin:n<=i*t?0:n<i*t+t?n-i*t:t,ymin:l<=s*e?0:l<s*e+e?l-s*e:e,xmax:n+r<=i*t?0:n+r<i*t+t?n+r-i*t:t,ymax:l+o<=s*e?0:l+o<s*e+e?l+o-s*e:e}}(r,o,s,n,a,h,f,u);let p=0,x=0;if(l){const t=l.hasGCSSShiftTransform?360:l.halfWorldWidth,e=r*l.resolutionX,i=l.startX+s*e,n=i+e;i<t&&n>t?x=l.rightPadding:i>=t&&(p=l.leftMargin-l.rightPadding,x=0)}if(c.xmax-=x,"number"!=typeof e)for(let m=c.ymin;m<c.ymax;m++){const i=(n*o+m-h)*f+(s*r-a)+p,l=m*r;for(let s=c.xmin;s<c.xmax;s++)t[i+s]=e[l+s]}else for(let m=c.ymin;m<c.ymax;m++){const i=(n*o+m-h)*f+(s*r-a)+p;for(let s=c.xmin;s<c.xmax;s++)t[i+s]=e}}function B(t,e,i,s,n){const l=t.filter((t=>p(t)))[0];if(null==l)return null;const r=s?s.width:e.width,o=s?s.height:e.height,a=l.width,h=l.height,f=e.width/a,u=e.height/h,x={offset:i||{x:0,y:0},mosaic:s||e,block:{width:a,height:h}},m=l.pixelType,d=c.getPixelArrayConstructor(m),g=l.pixels.length,y=[];let w,k,A;for(let c=0;c<g;c++){k=new d(r*o);for(let e=0;e<u;e++)for(let i=0;i<f;i++){const s=t[e*f+i];p(s)&&(w=s.pixels[c],U(k,w,x,i,e,n))}y.push(k)}if(t.some((t=>null==t||t.mask&&t.mask.length>0))){A=new Uint8Array(r*o);for(let e=0;e<u;e++)for(let i=0;i<f;i++){const s=t[e*f+i];U(A,(s?s.mask:null)||(s?1:0),x,i,e,n)}}const M=new c({width:r,height:o,pixels:y,pixelType:m,mask:A});return M.updateStatistics(),M}function T(t,e,i){if(!p(t))return null;const{width:s,height:n}=t,l=e.x,r=e.y,o=i.width+l,a=i.height+r;if(l<0||r<0||o>s||a>n)return t;if(0===l&&0===r&&o===s&&a===n)return t;t.mask||(t.mask=new Uint8Array(s*n));const h=t.mask;for(let f=0;f<n;f++){const t=f*s;for(let e=0;e<s;e++)h[t+e]=f<r||f>=a||e<l||e>=o?0:1}return t.updateStatistics(),t}function C(t){if(0===t.size)return 0;let e=0,i=-1,s=0;const n=t.keys();let l=n.next();for(;!l.done;)s=t.get(l.value),s>e&&(i=l.value,e=s),l=n.next();return i}function P(t,e,i){if(0===i)return;const s=t.get(e);1===s?t.delete(e):t.set(e,s-1)}function S(t,e,i){0!==i&&t.set(e,t.has(e)?t.get(e)+1:1)}function G(t,e,i){let{x:s,y:n}=e;const{width:l,height:r}=i;if(0===s&&0===n&&r===t.height&&l===t.width)return t;const{width:o,height:a}=t,h=Math.max(0,n),f=Math.max(0,s),u=Math.min(s+l,o),x=Math.min(n+r,a);if(u<0||x<0||!p(t))return null;s=Math.max(0,-s),n=Math.max(0,-n);const{pixels:m,mask:d}=t,g=l*r,y=m.length,w=[];for(let p=0;p<y;p++){const e=m[p],i=c.createEmptyBand(t.pixelType,g);for(let t=h;t<x;t++){const r=t*o;let a=(t+n-h)*l+s;for(let t=f;t<u;t++)i[a++]=e[r+t]}w.push(i)}const k=new Uint8Array(g);for(let c=h;c<x;c++){const t=c*o;let e=(c+n-h)*l+s;for(let i=f;i<u;i++)k[e++]=d?d[t+i]:1}const A=new c({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function F(t,e=!0){if(!p(t))return null;const{pixels:i,width:s,height:n,mask:l,pixelType:r}=t,o=[],a=Math.round(s/2),h=Math.round(n/2),f=n-1,u=s-1;for(let p=0;p<i.length;p++){const t=i[p],l=c.createEmptyBand(r,a*h);let x=0;for(let i=0;i<n;i+=2)for(let n=0;n<s;n+=2){const r=t[i*s+n];if(e){const e=n===u?r:t[i*s+n+1],o=i===f?r:t[i*s+n+s],a=n===u?o:i===f?e:t[i*s+n+s+1];l[x++]=(r+e+o+a)/4}else l[x++]=r}o.push(l)}let x=null;if(l){x=new Uint8Array(a*h);let t=0;for(let i=0;i<n;i+=2)for(let n=0;n<s;n+=2){const r=l[i*s+n];if(e){const e=n===u?r:l[i*s+n+1],o=i===f?r:l[i*s+n+s],a=n===u?o:i===f?e:l[i*s+n+s+1];x[t++]=r*e*o*a?1:0}else x[t++]=r}}return new c({width:a,height:h,pixelType:r,pixels:o,mask:x})}function I(t,e,i){if(!p(t))return null;const{width:s,height:n}=e;let{width:l,height:r}=t;const o=new Map,a={x:0,y:0},h=null==i?1:1+i;let f=t;for(let u=0;u<h;u++){const t=Math.ceil(l/s),i=Math.ceil(r/n);for(let l=0;l<i;l++){a.y=l*n;for(let i=0;i<t;i++){a.x=i*s;const t=G(f,a,e);o.set(`${u}/${l}/${i}`,t)}}u<h-1&&(f=F(f)),l=Math.round(l/2),r=Math.round(r/2)}return o}function R(t,e,i,s,n="nearest"){if(!p(t))return null;"majority"===n&&(t=function(t){if(!p(t))return null;const e=t.clone(),{width:i,height:s,pixels:n,mask:l}=t,r=n[0],o=e.pixels[0];for(let a=2;a<s-1;a++){const t=new Map;for(let s=a-2;s<a+2;s++)for(let e=0;e<4;e++){const n=s*i+e;S(t,r[n],l?l[n]:1)}o[a*i]=C(t),o[a*i+1]=o[a*i+2]=o[a*i];let e=3;for(;e<i-1;e++){let s=(a-2)*i+e+1;S(t,r[s],l?l[s]:1),s=(a-1)*i+e+1,S(t,r[s],l?l[s]:1),s=a*i+e+1,S(t,r[s],l?l[s]:1),s=(a+1)*i+e+1,S(t,r[s],l?l[s]:1),s=(a-2)*i+e-3,P(t,r[s],l?l[s]:1),s=(a-1)*i+e-3,P(t,r[s],l?l[s]:1),s=a*i+e-3,P(t,r[s],l?l[s]:1),s=(a+1)*i+e-3,P(t,r[s],l?l[s]:1),o[a*i+e]=C(t)}o[a*i+e+1]=o[a*i+e]}for(let a=0;a<i;a++)o[a]=o[i+a]=o[2*i+a],o[(s-1)*i+a]=o[(s-2)*i+a];return e.updateStatistics(),e}(t));const{pixels:l,mask:r,pixelType:o}=t,a=t.width,h=t.height,f=c.getPixelArrayConstructor(o),u=l.length,{width:x,height:m}=e,d=s.cols,g=s.rows,y=Math.ceil(x/d),w=Math.ceil(m/g);let k,A,M,v,b,U,B,T=!1;for(let c=0;c<i.length;c+=3)-1===i[c]&&-1===i[c+1]&&-1===i[c+2]&&(T=!0);const G=new Float32Array(x*m),F=new Float32Array(x*m);let I,R,j=0;const O="majority"===n?0:.5;for(let c=0;c<w;c++)for(let t=0;t<y;t++){k=12*(c*y+t),A=i[k],M=i[k+1],v=i[k+2],b=i[k+3],U=i[k+4],B=i[k+5];for(let e=0;e<g;e++){j=(c*g+e)*x+t*d,R=(e+.5)/g;for(let t=0;t<e;t++)I=(t+.5)/d,G[j+t]=Math.round((A*I+M*R+v)*a-O),F[j+t]=Math.round((b*I+U*R+B)*h-O)}k+=6,A=i[k],M=i[k+1],v=i[k+2],b=i[k+3],U=i[k+4],B=i[k+5];for(let e=0;e<g;e++){j=(c*g+e)*x+t*d,R=(e+.5)/g;for(let t=e;t<d;t++)I=(t+.5)/d,G[j+t]=Math.round((A*I+M*R+v)*a-O),F[j+t]=Math.round((b*I+U*R+B)*h-O)}}const V=(t,e)=>{for(let i=0;i<m;i++){k=i*x;for(let i=0;i<x;i++)G[k]<0||F[k]<0?t[k]=0:t[k]=e[G[k]+F[k]*a],k++}},_=[];let E;for(let c=0;c<u;c++)E=new f(x*m),V(E,l[c]),_.push(E);const z=new c({width:x,height:m,pixelType:o,pixels:_});if(r)z.mask=new Uint8Array(x*m),V(z.mask,r);else if(T){z.mask=new Uint8Array(x*m);for(let t=0;t<x*m;t++)z.mask[t]=G[t]<0||F[t]<0?0:1}return z.updateStatistics(),z}export{I as C,R as T,M as a,v as c,B as d,A as f,T as g,k as h,m as i,d as l,b as m,x as n,y as o,g as r,w as s,c as u};
