var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,o=(t,r,i)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[r]=i,n=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&o(e,r,t[r]);if(i)for(var r of i(t))a.call(t,r)&&o(e,r,t[r]);return e},l=(e,i)=>t(e,r(i));import{J as h,du as c,d0 as d,ey as p,H as u,Z as y,bU as m,ez as v,eA as f,eB as g,eC as _,eD as w,K as b,eE as S,bq as T,R as j,dc as L,as as I,at as O,eF as x,eG as E,et as k,au as D,eH as P}from"./vendor.0f6f771b.js";import{s as V}from"./ArcGISCachedService.91e27042.js";import"./serviceTileInfoProperty.202da731.js";import"./TilemapCache.fa1459ad.js";const $=h.getLogger("esri.core.workers.WorkerHandle");class C extends class{constructor(e,t,r,i={}){this._mainMethod=t,this._listeners=[],this._promise=c(e,l(n({},i),{schedule:r})).then((e=>{if(void 0===this._thread){this._thread=e,this._promise=null,i.hasInitialize&&this.broadcast({},"initialize");for(const e of this._listeners)this._connectListener(e)}else e.close()})),this._promise.catch((t=>$.error(`Failed to initialize ${e} worker: ${t}`)))}on(e,t){const r={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(r),this._connectListener(r),d((()=>{r.removed=!0,p(this._listeners,r),this._thread&&u(r.threadHandle)&&r.threadHandle.remove()}))}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,r){if(this._thread){const i=this.getTransferList(t,e);return this._thread.invoke(e,t,{transferList:i,signal:r})}return this._promise?this._promise.then((()=>(y(r),this.invokeMethod(e,t,r)))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then((()=>{})):this._promise?this._promise.then((()=>this.broadcast(e,t))):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then((t=>{e.removed||(e.threadHandle=t)}))}}{constructor(e=null){super("LercWorker","_decode",e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,r){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},r):Promise.resolve(null)}getTransferList(e){return[e.buffer]}release(){--this.ref<=0&&(M.forEach(((e,t)=>{e===this&&M.delete(t)})),this.destroy())}}const M=new Map;const A=h.getLogger("esri.layers.ElevationLayer");let U=class extends(V(v(f(g(_(P)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=function(e=null){let t=M.get(m(e));return t||(u(e)?(t=new C((t=>e.schedule(t))),M.set(e,t)):(t=new C,M.set(null,t))),++t.ref,t}()}normalizeCtorArgs(e,t){return"string"==typeof e?n({url:e},t):e}destroy(){this._lercDecoder=w(this._lercDecoder)}set minScale(e){this.constructed&&A.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&A.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,t){let r=t.currentVersion;return r||(r=9.3),r}load(e){const t=u(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new b("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(S).then((()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,r,i){const s=u((i=i||{signal:null}).signal)?i.signal:i.signal=T().signal,a={responseType:"array-buffer",signal:s},o={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,r,i))).then((()=>j(this.getTileUrl(e,t,r),a))).then((e=>this._lercDecoder.decode(e.data,o,s))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,t,r){const i=!this.tilemapCache&&this.supportsBlankTile,s=L(l(n({},this.parsedUrl.query),{blankTile:!i&&null}));return`${this.parsedUrl.path}/tile/${e}/${t}/${r}${s?"?"+s:""}`}async queryElevation(e,t){const{ElevationQuery:r}=await import("./ElevationQuery.f234b2ab.js");return y(t),(new r).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:r}=await import("./ElevationQuery.f234b2ab.js");return y(t),(new r).createSampler(this,e,t)}_fetchTileAvailability(e,t,r,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,r,i):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:n({f:"json"},this.parsedUrl.query),responseType:"json",signal:e},r=await j(this.parsedUrl.path,t);r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};I([O({json:{read:{source:"copyrightText"}}})],U.prototype,"copyright",void 0),I([O({readOnly:!0,type:x})],U.prototype,"heightModelInfo",void 0),I([O({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],U.prototype,"path",void 0),I([O({type:["show","hide"]})],U.prototype,"listMode",void 0),I([O({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],U.prototype,"minScale",null),I([O({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],U.prototype,"maxScale",null),I([O({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],U.prototype,"opacity",void 0),I([O({type:["ArcGISTiledElevationServiceLayer"]})],U.prototype,"operationalLayerType",void 0),I([O()],U.prototype,"sourceJSON",void 0),I([O({json:{read:!1},value:"elevation",readOnly:!0})],U.prototype,"type",void 0),I([O(E)],U.prototype,"url",void 0),I([O()],U.prototype,"version",void 0),I([k("version",["currentVersion"])],U.prototype,"readVersion",null),U=I([D("esri.layers.ElevationLayer")],U),U.prototype.fetchTile.__isDefault__=!0;var H=U;export{H as default};
