var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,a=(t,r,i)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[r]=i,n=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&a(e,r,t[r]);if(i)for(var r of i(t))o.call(t,r)&&a(e,r,t[r]);return e},l=(e,i)=>t(e,r(i));import{ap as p,cG as u,dJ as d,H as c,dK as y,co as f,K as h,bU as m,gH as g,df as w,du as v,I as b,ad as F,as as O,at as I,au as S,hw as j,gT as R,hv as P,g_ as x,gU as q,eA as T,eB as U,eC as _,eH as E,bn as C,i9 as N,ia as D,iq as J,ir as k,em as W,cL as X,cS as Y,h1 as L,dw as Q,h2 as V,ib as G,ic as H,id as B,et as z,c7 as K,iu as M,ig as A,i2 as Z,ie as $,hk as ee,h4 as te,dS as re,i3 as ie,h5 as se}from"./vendor.0f6f771b.js";import{a as oe,u as ae}from"./clientSideDefaults.0b133d40.js";import{D as ne,X as le,_ as pe,W as ue,v as de}from"./wfsUtils.386bc923.js";import"./QueryEngineCapabilities.54eb86f4.js";import"./_rollupPluginBabelHelpers.1eead684.js";import"./geojson.89595ac0.js";let ce=class extends(p(u)){constructor(){super(...arguments),this.capabilities=oe(!1,!1),this.type="wfs",this._updateCustomParameters=d((()=>{var e;const t=this.layer.customParameters;return null==(e=this._connection)?void 0:e.invoke("setCustomParameters",t)}))}load(e){var t;const r=null!=(t=c(e)&&e.signal)?t:null;return this.addResolvingPromise(this._startWorker({signal:r})),Promise.resolve(this)}destroy(){var e;null==(e=this._connection)||e.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return y.fromJSON(r)}async queryFeaturesJSON(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)}async queryFeatureCount(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)}async queryObjectIds(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)}async queryExtent(e,t={}){await this.load(t);const r=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:r.count,extent:f.fromJSON(r.extent)}}async querySnapping(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)}async refresh(e={}){await this.load(e);const{extent:t}=await this._connection.invoke("refresh",void 0,e);return this.sourceJSON.extent=t,{extent:t}}async _createLoadOptions(e){const{url:t,customParameters:r,name:i,namespaceUri:s,spatialReference:o,fields:a,geometryType:p,swapXY:u}=this.layer;if(!t)throw new h("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities=this.wfsCapabilities||await ne(t,n({customParameters:r},e));const d=["fields","geometryType","name","namespaceUri","spatialReference","swapXY"].some((e=>null==this.layer[e]))?await le(this.wfsCapabilities,i,s,{spatialReference:o,customParameters:r,signal:null==e?void 0:e.signal}):l(n({},pe(a)),{geometryType:p,name:i,namespaceUri:s,spatialReference:o,swapXY:u}),c=m(ue(this.wfsCapabilities.readFeatureTypes(),d.name,d.namespaceUri)),y=g.toJSON(d.geometryType);return{customParameters:r,featureType:c,fields:d.fields.map((e=>e.toJSON())),geometryField:d.geometryField,geometryType:y,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:d.objectIdField,spatialReference:d.spatialReference.toJSON(),swapXY:d.swapXY}}async _startWorker(e){const[t,r]=await w([this._createLoadOptions(e),v("WFSSourceWorker",l(n({},e),{strategy:b("feature-layers-workers")?"dedicated":"local"}))]),i=t.error||r.error||null,s=r.value||null;if(i)throw s&&s.close(),i;const o=t.value;this._connection=r.value;const{extent:a}=await this._connection.invoke("load",o,e);this.sourceJSON={extent:a,fields:o.fields,geometryType:o.geometryType,objectIdField:o.objectIdField,geometryField:o.geometryField,drawingInfo:ae(o.geometryType),name:o.featureType.title,wfsInfo:{name:o.featureType.name,featureUrl:o.getFeatureUrl,maxFeatures:3e3,swapXY:o.swapXY,supportedSpatialReferences:o.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:o.featureType.namespaceUri}},this.handles.add(F(this.layer,"customParameters",(()=>this._updateCustomParameters().catch((()=>{})))))}};O([I()],ce.prototype,"capabilities",void 0),O([I({constructOnly:!0})],ce.prototype,"layer",void 0),O([I()],ce.prototype,"sourceJSON",void 0),O([I()],ce.prototype,"type",void 0),O([I()],ce.prototype,"wfsCapabilities",void 0),ce=O([S("esri.layers.graphics.sources.WFSSource")],ce);var ye,fe=ce;const he=se();let me=ye=class extends(j(R(P(x(q(T(U(_(E))))))))){constructor(e){super(e),this.capabilities=null,this.copyright=null,this.customParameters=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureReduction=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxFeatures=3e3,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new fe({layer:this}),this.spatialReference=C.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}static fromWFSLayerInfo(e){const{customParameters:t,fields:r,geometryField:i,geometryType:s,name:o,namespaceUri:a,objectIdField:n,spatialReference:l,swapXY:p,url:u,wfsCapabilities:d}=e;return new ye({customParameters:t,fields:r,geometryField:i,geometryType:s,name:o,namespaceUri:a,objectIdField:n,spatialReference:l,swapXY:p,url:u,wfsCapabilities:d})}destroy(){var e;null==(e=this.source)||e.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then((()=>this.source.load(e))).then((()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),N(this.renderer,this.fieldsIndex),D(this.timeInfo,this.fieldsIndex)}))),Promise.resolve(this)}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}readFeatureReduction(e,t){return J(e,t)}writeWebSceneFeatureReduction(e,t,r,i){k(e,t,"layerDefinition.featureReduction",i)}writeFields(e,t,r){const i=e.filter((e=>e.name!==de));this.geometryField&&i.unshift(new W({name:this.geometryField,alias:this.geometryField,type:"geometry"})),X(r,i.map((e=>e.toJSON())),t)}get parsedUrl(){return this.url?Y(this.url):null}set renderer(e){N(e,this.fieldsIndex),this._set("renderer",e)}createPopupTemplate(e){return L(this,e)}createQuery(){const e=new Q;e.returnGeometry=!0,e.outFields=["*"],e.where=this.definitionExpression||"1=1";const{timeOffset:t,timeExtent:r}=this;return e.timeExtent=null!=t&&null!=r?r.offset(-t.value,t.unit):r||null,e}getFieldDomain(e,t){var r;return null==(r=this.getField(e))?void 0:r.domain}getField(e){return this.fieldsIndex.get(e)}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(Q.from(e)||this.createQuery(),t))).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(Q.from(e)||this.createQuery(),t)))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(Q.from(e)||this.createQuery(),t)))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(Q.from(e)||this.createQuery(),t)))}refresh(){this.source.refresh().then((e=>{this.read(e,{origin:"service"}),super.refresh()}))}};O([I({readOnly:!0,aliasOf:"source.capabilities"})],me.prototype,"capabilities",void 0),O([I({type:String})],me.prototype,"copyright",void 0),O([I({readOnly:!0})],me.prototype,"createQueryVersion",null),O([I({json:{read:{source:"wfsInfo.customParameters"},write:{target:"wfsInfo.customParameters",ignoreOrigin:!0}}})],me.prototype,"customParameters",void 0),O([I({readOnly:!0})],me.prototype,"defaultPopupTemplate",null),O([I({type:String})],me.prototype,"definitionExpression",void 0),O([I({type:String})],me.prototype,"displayField",void 0),O([I({type:V})],me.prototype,"elevationInfo",void 0),O([I({types:{key:"type",base:G,typeMap:{selection:H,cluster:B}},json:{write:{target:"layerDefinition.featureReduction"}}})],me.prototype,"featureReduction",void 0),O([z("featureReduction",["layerDefinition.featureReduction"])],me.prototype,"readFeatureReduction",null),O([K("web-scene","featureReduction",{"layerDefinition.featureReduction":{types:M}})],me.prototype,"writeWebSceneFeatureReduction",null),O([I({readOnly:!0,json:{read:{source:"wfsInfo.featureUrl"},write:{target:"wfsInfo.featureUrl",ignoreOrigin:!0,isRequired:!0}}})],me.prototype,"featureUrl",void 0),O([I({type:[W],json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields",ignoreOrigin:!0,isRequired:!0},origins:{service:{read:{source:"fields"}}}}})],me.prototype,"fields",void 0),O([K("fields")],me.prototype,"writeFields",null),O([I(he.fieldsIndex)],me.prototype,"fieldsIndex",void 0),O([I({type:f,json:{origins:{service:{read:{source:"extent"}}}}})],me.prototype,"fullExtent",void 0),O([I()],me.prototype,"geometryField",void 0),O([I({type:g.apiValues,json:{read:{source:"layerDefinition.geometryType",reader:g.read},write:{target:"layerDefinition.geometryType",writer:g.write,ignoreOrigin:!0},origins:{service:{read:g.read}}}})],me.prototype,"geometryType",void 0),O([I({type:String})],me.prototype,"id",void 0),O([I(A)],me.prototype,"labelsVisible",void 0),O([I({type:[Z],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:$},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],me.prototype,"labelingInfo",void 0),O([I(ee)],me.prototype,"legendEnabled",void 0),O([I({type:["show","hide"]})],me.prototype,"listMode",void 0),O([I({type:String})],me.prototype,"objectIdField",void 0),O([I({type:["WFS"]})],me.prototype,"operationalLayerType",void 0),O([I({json:{read:{source:"wfsInfo.maxFeatures"},write:{target:"wfsInfo.maxFeatures",ignoreOrigin:!0,isRequired:!0}}})],me.prototype,"maxFeatures",void 0),O([I({readOnly:!0,json:{read:{source:"mode"},write:{target:"mode",ignoreOrigin:!0,isRequired:!0}}})],me.prototype,"mode",void 0),O([I({json:{read:{source:"wfsInfo.name"},write:{target:"wfsInfo.name",ignoreOrigin:!0,isRequired:!0}}})],me.prototype,"name",void 0),O([I({json:{read:{source:"wfsInfo.wfsNamespace"},write:{target:"wfsInfo.wfsNamespace",ignoreOrigin:!0,isRequired:!0}}})],me.prototype,"namespaceUri",void 0),O([I(he.outFields)],me.prototype,"outFields",void 0),O([I({readOnly:!0})],me.prototype,"parsedUrl",null),O([I(te)],me.prototype,"popupEnabled",void 0),O([I({type:re,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],me.prototype,"popupTemplate",void 0),O([I({types:ie,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},read:{source:"layerDefinition.drawingInfo.renderer"},write:{target:"layerDefinition.drawingInfo.renderer",ignoreOrigin:!0}}})],me.prototype,"renderer",null),O([I({type:Boolean})],me.prototype,"screenSizePerspectiveEnabled",void 0),O([I({readOnly:!0})],me.prototype,"source",void 0),O([I({type:C,json:{read:{source:"layerDefinition.spatialReference"},write:{target:"layerDefinition.spatialReference",ignoreOrigin:!0,isRequired:!0},origins:{service:{read:{source:"extent.spatialReference"}}}}})],me.prototype,"spatialReference",void 0),O([I({readOnly:!0,json:{read:{source:"wfsInfo.supportedSpatialReferences"},write:{target:"wfsInfo.supportedSpatialReferences",ignoreOrigin:!0,isRequired:!0}}})],me.prototype,"spatialReferences",void 0),O([I({json:{read:{source:"wfsInfo.swapXY"},write:{target:"wfsInfo.swapXY",ignoreOrigin:!0,isRequired:!0}}})],me.prototype,"swapXY",void 0),O([I({json:{read:{source:"title"},write:{enabled:!0,ignoreOrigin:!0,isRequired:!0},origins:{service:{read:{source:"name"}}}}})],me.prototype,"title",void 0),O([I({json:{read:!1},readOnly:!0})],me.prototype,"type",void 0),O([I({type:String,json:{write:!0}})],me.prototype,"url",void 0),O([I({readOnly:!0,json:{read:{source:"wfsInfo.version"},write:{target:"wfsInfo.version",ignoreOrigin:!0,isRequired:!0}}})],me.prototype,"version",void 0),O([I({aliasOf:"source.wfsCapabilities"})],me.prototype,"wfsCapabilities",void 0),me=ye=O([S("esri.layers.WFSLayer")],me);var ge=me;export{ge as default};
