var e=Object.defineProperty,r=Object.defineProperties,t=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,l=(r,t,i)=>t in r?e(r,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):r[t]=i,o=(e,r)=>{for(var t in r||(r={}))s.call(r,t)&&l(e,t,r[t]);if(i)for(var t of i(r))a.call(r,t)&&l(e,t,r[t]);return e},n=(e,i)=>r(e,t(i));import{ar as y,as as p,gc as u,cn as d,he as c,h4 as h,bm as f,at as b,Q as g,cF as m,Y as v,I as S,ao as w,gk as I,bi as x,gE as O,J as L,cm as D,h$ as P,i0 as E,i1 as j,gq as _,cQ as F,dF as T,gY as M,h1 as N,d0 as V,bz as A,fE as C,fX as k,i2 as J,c6 as q,dm as $,i3 as Q,h3 as U,i4 as B,gM as G,dz as R,i5 as z,hN as K,hb as X,i6 as Y}from"./vendor.982f672a.js";import{r as W}from"./Version.2f13d119.js";import{i as H}from"./sublayerUtils.70a0c1f5.js";const Z=e=>{let r=class extends e{constructor(){super(...arguments),this.capabilities=void 0,this.copyright=null,this.fullExtent=null,this.legendEnabled=!0,this.spatialReference=null,this.version=null}readCapabilities(e,r){const t=r.capabilities&&r.capabilities.split(",").map((e=>e.toLowerCase().trim()));if(!t)return{operations:{supportsQuery:!1,supportsExportMap:!1,supportsExportTiles:!1,supportsTileMap:!1},exportMap:null,exportTiles:null};const i=this.type,s=-1!==t.indexOf("query"),a=-1!==t.indexOf("map"),l=!!r.exportTilesAllowed,o=-1!==t.indexOf("tilemap"),n="tile"!==i&&!!r.supportsDynamicLayers,y="tile"!==i&&(!r.tileInfo||n),p="tile"!==i&&(!r.tileInfo||n),u="tile"!==i,d=!!r.cimVersion&&W.parse(r.cimVersion).since(1,4);return{operations:{supportsQuery:s,supportsExportMap:a,supportsExportTiles:l,supportsTileMap:o},exportMap:a?{supportsArcadeExpressionForLabeling:d,supportsSublayersChanges:u,supportsDynamicLayers:n,supportsSublayerVisibility:y,supportsSublayerDefinitionExpression:p}:null,exportTiles:l?{maxExportTilesCount:+r.maxExportTilesCount}:null}}readVersion(e,r){let t=r.currentVersion;return t||(t=r.hasOwnProperty("capabilities")||r.hasOwnProperty("tables")?10:r.hasOwnProperty("supportedImageFormatTypes")?9.31:9.3),t}async fetchSublayerInfo(e,r){return await this.fetchAllLayersAndTables(r),this._allLayersAndTablesMap.get(e)}async fetchAllLayersAndTables(e){await this.load(e),this._allLayersAndTablesPromise||(this._allLayersAndTablesPromise=g(m(this.url).path+"/layers",{responseType:"json",query:n(o({f:"json"},this.customParameters),{token:this.apiKey})}).then((e=>{this._allLayersAndTablesMap=new Map;for(const r of e.data.layers)this._allLayersAndTablesMap.set(r.id,r);return{result:e.data}}),(e=>({error:e}))));const r=await this._allLayersAndTablesPromise;if(v(e),"result"in r)return r.result;throw r.error}};return y([p({readOnly:!0})],r.prototype,"capabilities",void 0),y([u("service","capabilities",["capabilities","exportTilesAllowed","maxExportTilesCount","supportsDynamicLayers","tileInfo"])],r.prototype,"readCapabilities",null),y([p({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),y([p({type:d})],r.prototype,"fullExtent",void 0),y([p(c)],r.prototype,"id",void 0),y([p({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],r.prototype,"legendEnabled",void 0),y([p(h)],r.prototype,"popupEnabled",void 0),y([p({type:f})],r.prototype,"spatialReference",void 0),y([p()],r.prototype,"version",void 0),y([u("version",["currentVersion","capabilities","tables","supportedImageFormatTypes"])],r.prototype,"readVersion",null),r=y([b("esri.layers.mixins.ArcGISMapService")],r),r};var ee;function re(e){return e&&"esriSMS"===e.type}function te(e,r,t){var i;const s=this.originIdOf(r)>=K(t.origin);return{ignoreOrigin:!0,allowNull:s,enabled:!!t&&"map-image"===(null==(i=t.layer)?void 0:i.type)&&(t.writeSublayerStructure||s)}}function ie(e,r,t){var i;return{enabled:!!t&&"tile"===(null==(i=t.layer)?void 0:i.type)&&this._isOverridden(r)}}function se(e,r,t){return{ignoreOrigin:!0,enabled:t&&t.writeSublayerStructure||!1}}function ae(e,r,t){return{ignoreOrigin:!0,enabled:!!t&&(t.writeSublayerStructure||this.originIdOf(r)>=K(t.origin))}}const le=S.getLogger("esri.layers.support.Sublayer");let oe=0;const ne=new Set;ne.add("layer"),ne.add("parent"),ne.add("loaded"),ne.add("loadStatus"),ne.add("loadError"),ne.add("loadWarnings");let ye=ee=class extends(w(I(x(O)))){constructor(e){super(e),this.capabilities=void 0,this.fields=null,this.fullExtent=null,this.globalIdField=null,this.legendEnabled=!0,this.objectIdField=null,this.popupEnabled=!0,this.popupTemplate=null,this.sourceJSON=null,this.title=null,this.typeIdField=null,this.types=null}async load(e){return this.addResolvingPromise((async()=>{var r;if(!this.layer&&!this.url)throw new L("sublayer:missing-layer","Sublayer can't be loaded without being part of a layer",{sublayer:this});let t=null;if(!this.layer||this.originIdOf("url")>2||"data-layer"===(null==(r=this.source)?void 0:r.type))t=(await g(this.url,o({responseType:"json",query:{f:"json"}},e))).data;else{var i;let r=this.id;"map-layer"===(null==(i=this.source)?void 0:i.type)&&(r=this.source.mapLayerId),t=await this.layer.fetchSublayerInfo(r,e)}t&&(this.sourceJSON=t,this.read({layerDefinition:t},{origin:"service"}))})()),this}readCapabilities(e,r){const t=(e=(r=r.layerDefinition||r).capabilities||e)?e.toLowerCase().split(",").map((e=>e.trim())):[];return{exportMap:{supportsModification:!!r.canModifyLayer},operations:{supportsQuery:-1!==t.indexOf("query")}}}set definitionExpression(e){this._setAndNotifyLayer("definitionExpression",e)}get fieldsIndex(){return new D(this.fields||[])}readGlobalIdFieldFromService(e,r){if((r=r.layerDefinition||r).globalIdField)return r.globalIdField;if(r.fields)for(const t of r.fields)if("esriFieldTypeGlobalID"===t.type)return t.name}get id(){const e=this._get("id");return null==e?oe++:e}set id(e){this._get("id")!==e&&(!1!==this.get("layer.capabilities.exportMap.supportsDynamicLayers")?this._set("id",e):this._logLockedError("id","capability not available 'layer.capabilities.exportMap.supportsDynamicLayers'"))}set labelingInfo(e){this._setAndNotifyLayer("labelingInfo",e)}writeLabelingInfo(e,r,t,i){e&&e.length&&(r.layerDefinition={drawingInfo:{labelingInfo:e.map((e=>e.write({},i)))}})}set labelsVisible(e){this._setAndNotifyLayer("labelsVisible",e)}set layer(e){this._set("layer",e),this.sublayers&&this.sublayers.forEach((r=>r.layer=e))}set listMode(e){this._set("listMode",e)}set minScale(e){this._setAndNotifyLayer("minScale",e)}readMinScale(e,r){return r.minScale||r.layerDefinition&&r.layerDefinition.minScale||0}set maxScale(e){this._setAndNotifyLayer("maxScale",e)}readMaxScale(e,r){return r.maxScale||r.layerDefinition&&r.layerDefinition.maxScale||0}readObjectIdFieldFromService(e,r){if((r=r.layerDefinition||r).objectIdField)return r.objectIdField;if(r.fields)for(const t of r.fields)if("esriFieldTypeOID"===t.type)return t.name}set opacity(e){this._setAndNotifyLayer("opacity",e)}readOpacity(e,r){const t=r.layerDefinition;return 1-.01*(null!=t.transparency?t.transparency:t.drawingInfo.transparency)}writeOpacity(e,r,t,i){r.layerDefinition={drawingInfo:{transparency:100-100*e}}}writeParent(e,r){this.parent&&this.parent!==this.layer?r.parentLayerId=P(this.parent.id):r.parentLayerId=-1}get defaultPopupTemplate(){return this.createPopupTemplate()}set renderer(e){if(e)for(const r of e.getSymbols())if(E(r)){le.warn("Sublayer renderer should use 2D symbols");break}this._setAndNotifyLayer("renderer",e)}get source(){return this._get("source")||new j({mapLayerId:this.id})}set source(e){this._setAndNotifyLayer("source",e)}set sublayers(e){this._handleSublayersChange(e,this._get("sublayers")),this._set("sublayers",e)}castSublayers(e){return _(F.ofType(ee),e)}writeSublayers(e,r,t){this.get("sublayers.length")&&(r[t]=this.sublayers.map((e=>e.id)).toArray().reverse())}readTypeIdField(e,r){let t=(r=r.layerDefinition||r).typeIdField;if(t&&r.fields){t=t.toLowerCase();const e=r.fields.find((e=>e.name.toLowerCase()===t));e&&(t=e.name)}return null}get url(){var e,r;const t=null!=(e=null==(r=this.layer)?void 0:r.parsedUrl)?e:this._lastParsedUrl,i=this.source;if(!t)return null;if(this._lastParsedUrl=t,"map-layer"===(null==i?void 0:i.type))return`${t.path}/${i.mapLayerId}`;const s={layer:JSON.stringify({source:this.source})};return`${t.path}/dynamicLayer?${T(s)}`}set url(e){e?this._override("url",e):this._clearOverride("url")}set visible(e){this._setAndNotifyLayer("visible",e)}writeVisible(e,r,t,i){r[t]=this.getAtOrigin("defaultVisibility","service")||e}clone(){const{store:e}=M(this),r=new ee;return M(r).store=e.clone(ne),this.commitProperty("url"),r._lastParsedUrl=this._lastParsedUrl,r}createPopupTemplate(e){return N(this,e)}createQuery(){return new V({returnGeometry:!0,where:this.definitionExpression||"1=1"})}async createFeatureLayer(){var e,r;if(this.hasOwnProperty("sublayers"))return null;const t=null==(e=this.layer)?void 0:e.parsedUrl,i=new((await import("./vendor.982f672a.js").then((function(e){return e.jc}))).default)({url:t.path});return t&&this.source&&("map-layer"===this.source.type?i.layerId=this.source.mapLayerId:i.dynamicDataSource=this.source),null!=this.layer.refreshInterval&&(i.refreshInterval=this.layer.refreshInterval),this.definitionExpression&&(i.definitionExpression=this.definitionExpression),this.originIdOf("labelingInfo")>2&&(i.labelingInfo=A(this.labelingInfo)),this.originIdOf("labelsVisible")>0&&(i.labelsVisible=this.labelsVisible),this.originIdOf("legendEnabled")>0&&(i.legendEnabled=this.legendEnabled),this.originIdOf("visible")>0&&(i.visible=this.visible),this.originIdOf("minScale")>0&&(i.minScale=this.minScale),this.originIdOf("maxScale")>0&&(i.maxScale=this.maxScale),this.originIdOf("opacity")>0&&(i.opacity=this.opacity),this.originIdOf("popupTemplate")>0&&(i.popupTemplate=A(this.popupTemplate)),this.originIdOf("renderer")>2&&(i.renderer=A(this.renderer)),"data-layer"===(null==(r=this.source)?void 0:r.type)&&(i.dynamicDataSource=this.source.clone()),this.originIdOf("title")>0&&(i.title=this.title),"map-image"===this.layer.type&&this.layer.originIdOf("customParameters")>0&&(i.customParameters=this.layer.customParameters),"tile"===this.layer.type&&this.layer.originIdOf("customParameters")>0&&(i.customParameters=this.layer.customParameters),i}getFeatureType(e){const{typeIdField:r,types:t}=this;if(!r||!e)return null;const i=e.attributes?e.attributes[r]:void 0;if(null==i)return null;let s=null;return t.some((e=>{const{id:r}=e;return null!=r&&(r.toString()===i.toString()&&(s=e),!!s)})),s}getFieldDomain(e,r){const t=r&&r.feature,i=this.getFeatureType(t);if(i){const r=i.domains&&i.domains[e];if(r&&"inherited"!==r.type)return r}return this._getLayerDomain(e)}async queryFeatures(e=this.createQuery(),r){var t,i,s,a;if(await this.load(),!this.get("capabilities.operations.supportsQuery"))throw new L("Sublayer.queryFeatures","this layer doesn't support queries.");const[{executeQuery:l},{default:y}]=await Promise.all([import("./vendor.982f672a.js").then((function(e){return e.j9})),import("./vendor.982f672a.js").then((function(e){return e.ja}))]),p=await l(this.url,V.from(e),null!=(t=null==(i=this.layer)?void 0:i.spatialReference)?t:null,n(o({},r),{query:n(o({},null==(s=this.layer)?void 0:s.customParameters),{token:null==(a=this.layer)?void 0:a.apiKey})})),u=y.fromJSON(p.data);if(null!=u&&u.features)for(const o of u.features)o.sourceLayer=this;return u}toExportImageJSON(){var e;const r={id:this.id,source:(null==(e=this.source)?void 0:e.toJSON())||{mapLayerId:this.id,type:"mapLayer"}};this.definitionExpression&&(r.definitionExpression=this.definitionExpression);const t=["renderer","labelingInfo","opacity","labelsVisible"].reduce(((e,r)=>(e[r]=this.originIdOf(r),e)),{});if(Object.keys(t).some((e=>t[e]>2))){const e=r.drawingInfo={};t.renderer>2&&(e.renderer=this.renderer?this.renderer.toJSON():null),t.labelsVisible>2&&(e.showLabels=this.labelsVisible),this.labelsVisible&&t.labelingInfo>2&&(e.labelingInfo=this.labelingInfo?this.labelingInfo.map((e=>e.write({},{origin:"service",layer:this.layer}))):null,e.showLabels=!0),t.opacity>2&&(e.transparency=100-100*this.opacity),this._assignDefaultSymbolColors(e.renderer)}return r}_assignDefaultSymbolColors(e){this._forEachSimpleMarkerSymbols(e,(e=>{e.color||"esriSMSX"!==e.style&&"esriSMSCross"!==e.style||(e.outline&&e.outline.color?e.color=e.outline.color:e.color=[0,0,0,0])}))}_forEachSimpleMarkerSymbols(e,r){if(e){const t="uniqueValueInfos"in e?e.uniqueValueInfos:"classBreakInfos"in e?e.classBreakInfos:[];for(const e of t)re(e.symbol)&&r(e.symbol);"symbol"in e&&re(e.symbol)&&r(e.symbol),"defaultSymbol"in e&&re(e.defaultSymbol)&&r(e.defaultSymbol)}}_setAndNotifyLayer(e,r){const t=this.layer,i=this._get(e);let s,a;switch(e){case"definitionExpression":s="supportsSublayerDefinitionExpression";case"minScale":case"maxScale":case"visible":s="supportsSublayerVisibility";break;case"labelingInfo":case"labelsVisible":case"opacity":case"renderer":case"source":s="supportsDynamicLayers",a="supportsModification"}const l=M(this).getDefaultOrigin();if("service"!==l){if(s&&!1===this.get(`layer.capabilities.exportMap.${s}`))return void this._logLockedError(e,`capability not available 'layer.capabilities.exportMap.${s}'`);if(a&&!1===this.get(`capabilities.exportMap.${a}`))return void this._logLockedError(e,`capability not available 'capabilities.exportMap.${a}'`)}"source"!==e||"not-loaded"===this.loadStatus?(this._set(e,r),"service"!==l&&i!==r&&t&&t.emit&&t.emit("sublayer-update",{propertyName:e,target:this})):this._logLockedError(e,"'source' can't be changed after calling sublayer.load()")}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.handles.removeAll()),e&&(e.forEach((e=>{e.parent=this,e.layer=this.layer})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this.layer})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null})),e.on("before-changes",(e=>{const r=this.get("layer.capabilities.exportMap.supportsSublayersChanges");null==r||r||(le.error(new L("sublayer:sublayers-non-modifiable","Sublayer can't be added, moved, or removed from the layer's sublayers",{sublayer:this,layer:this.layer})),e.preventDefault())}))]))}_logLockedError(e,r){le.error(new L("sublayer:locked",`Property '${e}' can't be changed on Sublayer from the layer '${this.layer.id}'`,{reason:r,sublayer:this,layer:this.layer}))}_getLayerDomain(e){const r=this.fieldsIndex.get(e);return r?r.domain:null}};ye.test={isMapImageLayerOverridePolicy:e=>e===se||e===te,isTileImageLayerOverridePolicy:e=>e===ie},y([p({readOnly:!0})],ye.prototype,"capabilities",void 0),y([u("service","capabilities",["layerDefinition.canModifyLayer","layerDefinition.capabilities"])],ye.prototype,"readCapabilities",null),y([p({type:String,value:null,json:{name:"layerDefinition.definitionExpression",write:{overridePolicy:te}}})],ye.prototype,"definitionExpression",null),y([p({type:[C],json:{origins:{service:{read:{source:"layerDefinition.fields"}}}}})],ye.prototype,"fields",void 0),y([p({readOnly:!0})],ye.prototype,"fieldsIndex",null),y([p({type:d,json:{read:{source:"layerDefinition.extent"}}})],ye.prototype,"fullExtent",void 0),y([p({type:String})],ye.prototype,"globalIdField",void 0),y([u("service","globalIdField",["layerDefinition.globalIdField","layerDefinition.fields"])],ye.prototype,"readGlobalIdFieldFromService",null),y([p({type:k,json:{write:{ignoreOrigin:!0}}})],ye.prototype,"id",null),y([p({value:null,type:[J],json:{read:{source:"layerDefinition.drawingInfo.labelingInfo"},write:{target:"layerDefinition.drawingInfo.labelingInfo",overridePolicy:se}}})],ye.prototype,"labelingInfo",null),y([q("labelingInfo")],ye.prototype,"writeLabelingInfo",null),y([p({type:Boolean,value:!0,json:{read:{source:"layerDefinition.drawingInfo.showLabels"},write:{target:"layerDefinition.drawingInfo.showLabels",overridePolicy:se}}})],ye.prototype,"labelsVisible",null),y([p({value:null})],ye.prototype,"layer",null),y([p({type:Boolean,value:!0,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend",overridePolicy:ae}}})],ye.prototype,"legendEnabled",void 0),y([p({type:["show","hide","hide-children"],value:"show",json:{read:!1,write:!1,origins:{"web-scene":{read:!0,write:!0}}}})],ye.prototype,"listMode",null),y([p({type:Number,value:0,json:{write:{overridePolicy:se}}})],ye.prototype,"minScale",null),y([u("minScale",["minScale","layerDefinition.minScale"])],ye.prototype,"readMinScale",null),y([p({type:Number,value:0,json:{write:{overridePolicy:se}}})],ye.prototype,"maxScale",null),y([u("maxScale",["maxScale","layerDefinition.maxScale"])],ye.prototype,"readMaxScale",null),y([p({type:String})],ye.prototype,"objectIdField",void 0),y([u("service","objectIdField",["layerDefinition.objectIdField","layerDefinition.fields"])],ye.prototype,"readObjectIdFieldFromService",null),y([p({type:Number,value:1,json:{write:{target:"layerDefinition.drawingInfo.transparency",overridePolicy:se}}})],ye.prototype,"opacity",null),y([u("opacity",["layerDefinition.drawingInfo.transparency","layerDefinition.transparency"])],ye.prototype,"readOpacity",null),y([q("opacity")],ye.prototype,"writeOpacity",null),y([p({json:{type:k,write:{target:"parentLayerId",allowNull:!0,overridePolicy:se}}})],ye.prototype,"parent",void 0),y([q("parent")],ye.prototype,"writeParent",null),y([p({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(e,r)=>!r.disablePopup},write:{target:"disablePopup",overridePolicy:ae,writer(e,r,t){r[t]=!e}}}})],ye.prototype,"popupEnabled",void 0),y([p({type:$,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy:ae}}})],ye.prototype,"popupTemplate",void 0),y([p({readOnly:!0})],ye.prototype,"defaultPopupTemplate",null),y([p({types:Q,value:null,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:se},origins:{"web-scene":{types:U,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:se}}}}})],ye.prototype,"renderer",null),y([p({types:{key:"type",base:null,typeMap:{"data-layer":B,"map-layer":j}},cast(e){if(e){if("mapLayerId"in e)return G(j,e);if("dataSource"in e)return G(B,e)}return e},json:{name:"layerDefinition.source",write:{overridePolicy:se}}})],ye.prototype,"source",null),y([p()],ye.prototype,"sourceJSON",void 0),y([p({value:null,json:{type:[k],write:{target:"subLayerIds",allowNull:!0,overridePolicy:se}}})],ye.prototype,"sublayers",null),y([R("sublayers")],ye.prototype,"castSublayers",null),y([q("sublayers")],ye.prototype,"writeSublayers",null),y([p({type:String,json:{read:{source:"name"},write:{target:"name",allowNull:!0,overridePolicy:ae}}})],ye.prototype,"title",void 0),y([p({type:String})],ye.prototype,"typeIdField",void 0),y([u("typeIdField",["layerDefinition.typeIdField"])],ye.prototype,"readTypeIdField",null),y([p({type:[z],json:{origins:{service:{read:{source:"layerDefinition.types"}}}}})],ye.prototype,"types",void 0),y([p({type:String,json:{read:{source:"layerUrl"},write:{target:"layerUrl",overridePolicy:ie}}})],ye.prototype,"url",null),y([p({type:Boolean,value:!0,json:{read:{source:"defaultVisibility"},write:{target:"defaultVisibility",overridePolicy:se}}})],ye.prototype,"visible",null),y([q("visible")],ye.prototype,"writeVisible",null),ye=ee=y([b("esri.layers.support.Sublayer")],ye);var pe=ye;const ue=S.getLogger("esri.layers.TileLayer");const de=F.ofType(pe);function ce(e,r){e&&e.forEach((e=>{r(e),e.sublayers&&e.sublayers.length&&ce(e.sublayers,r)}))}const he=e=>{let r=class extends e{constructor(...e){super(...e),this.allSublayers=new X({getCollections:()=>[this.sublayers],getChildrenFunction:e=>e.sublayers}),this.sublayersSourceJSON={2:{},3:{},4:{},5:{}},this.handles.add(this.watch("sublayers",((e,r)=>this._handleSublayersChange(e,r)),!0))}readSublayers(e,r){if(!r||!e)return;const{sublayersSourceJSON:t}=this,i=K(r.origin);if(i<2)return;if(t[i]={context:r,visibleLayers:e.visibleLayers||t[i].visibleLayers,layers:e.layers||t[i].layers},i>2)return;this._set("serviceSublayers",this.createSublayersForOrigin("service").sublayers);const{sublayers:s,origin:a}=this.createSublayersForOrigin("web-document"),l=M(this);l.setDefaultOrigin(a),this._set("sublayers",new de(s)),l.setDefaultOrigin("user")}findSublayerById(e){return this.allSublayers.find((r=>r.id===e))}createServiceSublayers(){return this.createSublayersForOrigin("service").sublayers}createSublayersForOrigin(e){const r=K("web-document"===e?"web-map":e);let t=2,i=this.sublayersSourceJSON[2].layers,s=this.sublayersSourceJSON[2].context,a=null;const l=[3,4,5].filter((e=>e<=r));for(const d of l){const e=this.sublayersSourceJSON[d];H(e.layers)&&(t=d,i=e.layers,s=e.context,e.visibleLayers&&(a={visibleLayers:e.visibleLayers,context:e.context}))}const o=[3,4,5].filter((e=>e>t&&e<=r));let n=null;for(const d of o){const{layers:e,visibleLayers:r,context:t}=this.sublayersSourceJSON[d];e&&(n={layers:e,context:t}),r&&(a={visibleLayers:r,context:t})}const y=function(e,r){const t=[],i={};return e?(e.forEach((e=>{const s=new pe;if(s.read(e,r),i[s.id]=s,null!=e.parentLayerId&&-1!==e.parentLayerId){const r=i[e.parentLayerId];r.sublayers||(r.sublayers=[]),r.sublayers.unshift(s)}else t.unshift(s)})),t):t}(i,s),p=new Map,u=new Set;if(n)for(const d of n.layers)p.set(d.id,d);if(a)for(const d of a.visibleLayers)u.add(d);return ce(y,(e=>{n&&e.read(p.get(e.id),n.context),a&&e.read({defaultVisibility:u.has(e.id)},a.context)})),{origin:Y(t),sublayers:new de({items:y})}}read(e,r){super.read(e,r),this.readSublayers(e,r)}_handleSublayersChange(e,r){r&&(r.forEach((e=>{e.parent=null,e.layer=null})),this.handles.remove("sublayers-owner")),e&&(e.forEach((e=>{e.parent=this,e.layer=this})),this.handles.add([e.on("after-add",(({item:e})=>{e.parent=this,e.layer=this})),e.on("after-remove",(({item:e})=>{e.parent=null,e.layer=null}))],"sublayers-owner"),"tile"===this.type&&this.handles.add(e.on("before-changes",(e=>{ue.error(new L("tilelayer:sublayers-non-modifiable","ISublayer can't be added, moved, or removed from the layer's sublayers",{layer:this})),e.preventDefault()})),"sublayers-owner"))}};return y([p({readOnly:!0})],r.prototype,"allSublayers",void 0),y([p({readOnly:!0,type:F.ofType(pe)})],r.prototype,"serviceSublayers",void 0),y([p({value:null,type:de,json:{read:!1,write:{allowNull:!0,ignoreOrigin:!0}}})],r.prototype,"sublayers",void 0),y([p({readOnly:!0})],r.prototype,"sublayersSourceJSON",void 0),r=y([b("esri.layers.mixins.SublayersOwner")],r),r};export{pe as Q,he as f,Z as y};
