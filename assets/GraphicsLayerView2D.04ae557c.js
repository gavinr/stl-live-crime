import{j as i,cQ as e,ar as t,as as r,at as s}from"./vendor.982f672a.js";import{l as a,d as p}from"./LayerView.e2b523cc.js";import{i as o}from"./GraphicContainer.f9d48ef7.js";import{o as h}from"./BaseGraphicContainer.9dda7d11.js";import"./Container.5bdf9f13.js";import"./mat4f32.9c1247c6.js";import"./Utils.c0a073db.js";import"./Texture.4e30fbdc.js";import"./quantizationUtils.e53d0abd.js";import"./json.df9e51f4.js";import"./Matcher.488e0291.js";import"./definitions.8ca8ae21.js";import"./TileStore.b2e286cc.js";import"./FeatureSetReader.65c3caad.js";import"./centroid.f7592ee4.js";import"./visualVariablesUtils.df688d84.js";import"./visualVariablesUtils.606bef95.js";import"./quickselect.c0fda8e0.js";import"./tileUtils.788c3063.js";import"./schemaUtils.b1cb344d.js";import"./MaterialKey.35ddb98d.js";import"./CIMSymbolHelper.33a317ba.js";import"./Rect.96506681.js";import"./BidiEngine.82513d9e.js";import"./MD5.a7f2b001.js";import"./GeometryUtils.c1792d3b.js";import"./earcut.b5c0cad1.js";import"./TileClipper.83952a3d.js";import"./VertexArrayObject.cc6b7ca8.js";import"./FeatureContainer.77fd2159.js";import"./TileContainer.d9a21bf3.js";import"./WGLContainer.d6e17cff.js";import"./ShaderCompiler.46073aeb.js";import"./config.042ea55e.js";const c={remove(){},pause(){},resume(){}};let d=class extends(a(p)){initialize(){this.graphicsView=new h({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new o(this.view.featuresTilingScheme)})}attach(){this.container.addChild(this.graphicsView.container),this.handles.add(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),"graphicslayerview2d")}detach(){this.container.removeAllChildren(),this.graphicsView.destroy(),this.handles.remove("graphicslayerview2d")}hitTest(i,e){return this.suspended||!this.graphicsView?Promise.resolve(null):this.graphicsView.hitTest(i,e)}async fetchPopupFeatures(i){if(this.graphicsView)return this.graphicsView.searchFeatures(i).then((i=>i.filter((i=>!!i.popupTemplate))))}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(t){let r;return"number"==typeof t?r=[t]:t instanceof i?r=[t.uid]:Array.isArray(t)&&t.length>0?r="number"==typeof t[0]?t:t.map((i=>i&&i.uid)):e.isCollection(t)&&(r=t.map((i=>i&&i.uid)).toArray()),r=r.filter((i=>null!=i)),r.length?(this.graphicsView.addHighlight(r),{remove:()=>this.graphicsView.removeHighlight(r)}):c}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}};t([r()],d.prototype,"graphicsView",void 0),t([r()],d.prototype,"updating",void 0),d=t([s("esri.views.2d.layers.GraphicsLayerView2D")],d);var n=d;export{n as default};
