var e=Object.defineProperty,t=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable,s=(t,i,o)=>i in t?e(t,i,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[i]=o,l=(e,t)=>{for(var i in t||(t={}))r.call(t,i)&&s(e,i,t[i]);if(o)for(var i of o(t))n.call(t,i)&&s(e,i,t[i]);return e};import{ar as a,as as u,at as d,gE as c,G as p,dq as y,cn as h,d8 as f,H as m,d$ as g,hf as v,gJ as b,gX as w,bm as O,db as S}from"./vendor.6e209a4d.js";import{a as F}from"./clientSideDefaults.d83baf45.js";import"./QueryEngineCapabilities.54eb86f4.js";let I=class extends c{constructor(e){super(e),this.type="csv"}load(e){const t=p(e)?e.signal:null;return this.addResolvingPromise(this._startWorker(t)),Promise.resolve(this)}destroy(){var e;null==(e=this._connection)||e.close(),this._connection=null}openPorts(){return this.load().then((()=>this._connection.openPorts()))}queryFeatures(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t))).then((e=>y.fromJSON(e)))}queryFeaturesJSON(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatures",e?e.toJSON():null,t)))}queryFeatureCount(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)))}queryObjectIds(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)))}queryExtent(e,t={}){return this.load(t).then((()=>this._connection.invoke("queryExtent",e?e.toJSON():null,t))).then((e=>({count:e.count,extent:h.fromJSON(e.extent)})))}querySnapping(e,t={}){return this.load(t).then((()=>this._connection.invoke("querySnapping",e,t)))}async _startWorker(e){this._connection=await f("CSVSourceWorker",{strategy:m("feature-layers-workers")?"dedicated":"local",signal:e});const t=await this._connection.invoke("load",{url:this.url,parsing:{columnDelimiter:this.delimiter,fields:this.fields&&this.fields.map((e=>e.toJSON())),latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference&&this.spatialReference.toJSON(),timeInfo:this.timeInfo&&this.timeInfo.toJSON()}},{signal:e});this.locationInfo=t.locationInfo,this.sourceJSON=t.layerDefinition,this.columnDelimiter=t.columnDelimiter}};a([u()],I.prototype,"type",void 0),a([u()],I.prototype,"url",void 0),a([u()],I.prototype,"delimiter",void 0),a([u()],I.prototype,"fields",void 0),a([u()],I.prototype,"latitudeField",void 0),a([u()],I.prototype,"longitudeField",void 0),a([u()],I.prototype,"spatialReference",void 0),a([u()],I.prototype,"timeInfo",void 0),a([u()],I.prototype,"locationInfo",void 0),a([u()],I.prototype,"sourceJSON",void 0),a([u()],I.prototype,"columnDelimiter",void 0),I=a([d("esri.layers.graphics.sources.CSVSource")],I);var j=I;let q=class extends w{constructor(...e){super(...e),this.capabilities=F(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.customParameters=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.portalItem=null,this.spatialReference=O.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(e,t){return"string"==typeof e?l({url:e},t):e}get isTable(){return this.loaded&&null==this.geometryType}readWebMapLabelsVisible(e,t){return null!=t.showLabels?t.showLabels:!!(t.layerDefinition&&t.layerDefinition.drawingInfo&&t.layerDefinition.drawingInfo.labelingInfo)}set url(e){this._set("url",e)}async createGraphicsSource(e){const t=new j({delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField,longitudeField:this.longitudeField,spatialReference:this.spatialReference,timeInfo:this.timeInfo,url:this.url});return this._set("source",t),await t.load({signal:e}),this.read({locationInfo:t.locationInfo,columnDelimiter:t.columnDelimiter},{origin:"service",url:this.parsedUrl}),t}queryFeatures(e,t){return this.load().then((()=>this.source.queryFeatures(S.from(e)||this.createQuery()))).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this.load().then((()=>this.source.queryObjectIds(S.from(e)||this.createQuery())))}queryFeatureCount(e,t){return this.load().then((()=>this.source.queryFeatureCount(S.from(e)||this.createQuery())))}queryExtent(e,t){return this.load().then((()=>this.source.queryExtent(S.from(e)||this.createQuery())))}write(e,o){return super.write(e,(r=l({},o),t(r,i({writeLayerSchema:!0}))));var r}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};a([u({readOnly:!0,json:{read:!1,write:!1}})],q.prototype,"capabilities",void 0),a([u({type:[","," ",";","|","\t"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],q.prototype,"delimiter",void 0),a([u({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],q.prototype,"editingEnabled",void 0),a([u({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],q.prototype,"fields",void 0),a([u({type:Boolean,readOnly:!0})],q.prototype,"isTable",null),a([g("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],q.prototype,"readWebMapLabelsVisible",null),a([u({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],q.prototype,"latitudeField",void 0),a([u({json:{write:!0,origins:{"web-scene":{write:!1,read:!1}}}})],q.prototype,"customParameters",void 0),a([u({type:["show","hide"]})],q.prototype,"listMode",void 0),a([u({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],q.prototype,"locationType",void 0),a([u({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],q.prototype,"longitudeField",void 0),a([u({type:["CSV"]})],q.prototype,"operationalLayerType",void 0),a([u()],q.prototype,"outFields",void 0),a([u({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],q.prototype,"path",void 0),a([u({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],q.prototype,"portalItem",void 0),a([u({json:{read:!1},cast:null,type:j,readOnly:!0})],q.prototype,"source",void 0),a([u({json:{read:!1},value:"csv",readOnly:!0})],q.prototype,"type",void 0),a([u({json:{read:v,write:{isRequired:!0,ignoreOrigin:!0,writer:b}}})],q.prototype,"url",null),q=a([d("esri.layers.CSVLayer")],q);var _=q;export{_ as default};
