import{H as e,G as t,bX as s,ah as r,ae as i,af as n,c1 as a,a7 as o,a2 as h,bu as u,as as f,au as l,I as d,aQ as c}from"./vendor.0f6f771b.js";import{s as _}from"./CircularArray.c3860174.js";import{r as p,E as m,I as b}from"./Utils.19562db3.js";import{r as g,o as y}from"./FeatureContainer.b9d3159a.js";import{j as w}from"./schemaUtils.8a8d3ef0.js";import{o as C}from"./BaseTileRenderer.f09fa5a1.js";import{m as k}from"./visualVariablesUtils.20375a00.js";import{g as V}from"./WGLContainer.7d7ac47e.js";import"./Texture.e232c600.js";import"./definitions.8ca8ae21.js";import"./TileContainer.6a40f454.js";import"./Container.c8eaa527.js";import"./mat4f32.9c1247c6.js";import"./VertexArrayObject.8589ac11.js";import"./MaterialKey.1b4b84e9.js";import"./visualVariablesUtils.0e33d252.js";import"./CIMSymbolHelper.e451d5ea.js";import"./Rect.96506681.js";import"./BidiEngine.82513d9e.js";import"./MD5.a7f2b001.js";import"./ShaderCompiler.7eab3352.js";import"./config.042ea55e.js";import"./GeometryUtils.c1792d3b.js";import"./earcut.b5c0cad1.js";const S=4294967296;class x{constructor(e){this._head=e,this._cursor=e}static from(e){const t=v.from(new Float32Array(e));return new x(t)}get id(){return this._cursor.id}get baseZoom(){return this._cursor.baseZoom}get anchorX(){return this._cursor.anchorX}get anchorY(){return this._cursor.anchorY}get directionX(){return this._cursor.directionX}get directionY(){return this._cursor.directionY}get size(){return this._cursor.size}get materialKey(){return this._cursor.materialKey}get boundsCount(){return this._cursor.boundsCount}computedMinZoom(){return this._cursor.computedMinZoom()}setComputedMinZoom(e){return this._cursor.setComputedMinZoom(e)}boundsComputedAnchorX(e){return this._cursor.boundsComputedAnchorX(e)}boundsComputedAnchorY(e){return this._cursor.boundsComputedAnchorY(e)}setBoundsComputedAnchorX(e,t){return this._cursor.setBoundsComputedAnchorX(e,t)}setBoundsComputedAnchorY(e,t){return this._cursor.setBoundsComputedAnchorY(e,t)}boundsCenterX(e){return this._cursor.boundsCenterX(e)}boundsCenterY(e){return this._cursor.boundsCenterY(e)}boundsWidth(e){return this._cursor.boundsWidth(e)}boundsHeight(e){return this._cursor.boundsHeight(e)}link(t){if(e(t._head))return this._cursor.link(t._head)}getCursor(){return this.copy()}copy(){var e;const t=new x(null==(e=this._head)?void 0:e.copy());if(!t._head)return t;let s=t._head,r=t._head._link;for(;r;)s._link=r.copy(),s=r,r=s._link;return t}peekId(){var e;return null!=(e=this._cursor.peekId())?e:this._cursor._link.peekId()}nextId(){const e=this.id;for(;e===this.id;)if(!this.next())return!1;return!0}save(){this._savedCursor=this._cursor,this._savedOffset=this._cursor._offset}restore(){this._cursor=this._savedCursor,this._cursor._offset=this._savedOffset}next(){if(!this._cursor)return!1;if(!this._cursor.next()){if(!this._cursor._link)return!1;this._cursor=this._cursor._link,this._cursor._offset=0}return!0}lookup(e){for(this._cursor=this._head;this._cursor&&!this._cursor.lookup(e);){if(!this._cursor._link)return!1;this._cursor=this._cursor._link}return!!this._cursor}delete(t){let s=this._head,r=null;for(;s;){if(s.delete(t))return s.isEmpty()&&e(r)&&(r._link=s._link),!0;r=s,s=s._link}return!1}}class v{constructor(e){this._offset=-1,this._link=null,this._count=0,this._deletedCount=0,this._offsets={instance:null},this._buffer=e}static from(e){return new v(new Float32Array(e))}isEmpty(){return this._deletedCount===this.count}get count(){return this._count||(this._count=this._computeCount()),this._count}get id(){return this._buffer[this._offset+0]}set id(e){this._buffer[this._offset+0]=e}get baseZoom(){return this._buffer[this._offset+1]}get anchorX(){return this._buffer[this._offset+2]}get anchorY(){return this._buffer[this._offset+3]}get directionX(){return this._buffer[this._offset+4]}get directionY(){return this._buffer[this._offset+5]}get size(){return this._buffer[this._offset+6]}get materialKey(){return this._buffer[this._offset+7]}computedMinZoom(){return this._buffer[this._offset+8]}setComputedMinZoom(e){this._buffer[this._offset+8]=e}get boundsCount(){return this._buffer[this._offset+9]}boundsComputedAnchorX(e){return this._buffer[this._offset+10+6*e+0]}boundsComputedAnchorY(e){return this._buffer[this._offset+10+6*e+1]}setBoundsComputedAnchorX(e,t){this._buffer[this._offset+10+6*e+0]=t}setBoundsComputedAnchorY(e,t){this._buffer[this._offset+10+6*e+1]=t}boundsCenterX(e){return this._buffer[this._offset+10+6*e+2]}boundsCenterY(e){return this._buffer[this._offset+10+6*e+3]}boundsWidth(e){return this._buffer[this._offset+10+6*e+4]}boundsHeight(e){return this._buffer[this._offset+10+6*e+5]}link(e){let t=this;for(;t._link;)t=t._link;t._link=e}getCursor(){return this.copy()}copy(){const e=new v(this._buffer);return e._link=this._link,e._offset=this._offset,e._deletedCount=this._deletedCount,e._offsets=this._offsets,e._count=this._count,e}peekId(){const e=this._offset+10+6*this.boundsCount+0;return e>=this._buffer.length?0:this._buffer[e]}next(){let e=0;for(;this._offset<this._buffer.length&&e++<100&&(-1===this._offset?this._offset=0:this._offset+=10+6*this.boundsCount,this.id===S););return this.id!==S&&this._offset<this._buffer.length}delete(e){const t=this._offset,s=this.lookup(e);if(s)for(this.id=4294967295,++this._deletedCount;this.next()&&this.id===e;)this.id=4294967295,++this._deletedCount;return this._offset=t,s}lookup(e){const s=this._offset;if(t(this._offsets.instance)){this._offsets.instance=new Map;const e=this.copy();e._offset=-1;let t=0;for(;e.next();)e.id!==t&&(this._offsets.instance.set(e.id,e._offset),t=e.id)}return!!this._offsets.instance.has(e)&&(this._offset=this._offsets.instance.get(e),this.id!==S||(this._offset=s,!1))}_computeCount(){const e=this._offset;let t=0;for(this._offset=-1;this.next();)t++;return this._offset=e,t}}class T{constructor(e,t){this._buffers=[],this.geometryType=e,this._stage=t}destroy(){this._buffers.forEach((e=>e.release()))}insert(e,t){if(!t.records.byteLength)return;"update"===e&&this._buffers.forEach((e=>e.free(t)));const s={done:!1,offset:0,vertexData:t};this._buffers.forEach((e=>e.insert(s)));let r=1e3;for(;!s.done&&--r;){const e=this._stage.pools.bufferData.acquire(t,this.geometryType,s.offset);e.insert(s),this._buffers.push(e)}}remove(e){this._buffers.forEach((t=>t.freeIds(e)))}upload(e){this._buffers.forEach((t=>t.upload(e)))}forEachCommand(e){this._buffers.forEach((t=>t.displayList.forEach(e)))}}let M=0;class E extends g{constructor(e,t,r){super(e,t),this.instanceId=M++,this.patchCount=0,this._renderState={current:{geometry:new Map,metrics:null},next:null,swap:!1,swapFrames:0,locked:!1},this._patches=new _(100),this._lastCommitTime=0,this._lastMessageWasClear=!1,this.transforms.labelMat2d=s(),this._store=r}destroy(){super.destroy(),this._renderState.current.geometry.forEach((e=>e.destroy()))}get labelMetrics(){return this._renderState.current.metrics}get hasData(){return!!this._renderState.current.geometry.size}getGeometry(e){return this._renderState.current.geometry.get(e)}setTransform(e,t){super.setTransform(e,t);const s=this.transforms.labelMat2d,o=e.getScreenTransform(s,t),u=h();r(u,this.coords,o),i(s),n(s,s,u),a(s,e.viewMat2d,s)}patch(e){this.patchCount++,e.clear&&this._lastMessageWasClear||(this._lastMessageWasClear=e.clear,e.clear&&this._patches.size>=50&&this._dropPatches(),this._patches.enqueue(e),this.requestRender())}commit(e){if(this._lastCommitTime!==e.time){this._lastCommitTime=e.time;for(let e=0;e<4;e++)this._updateMesh();this._renderState.swap&&(this._swapRenderStates(),this.requestRender())}}lock(){this._renderState.locked=!0}unlock(){this._renderState.locked=!1,this._flushUpdates(),this._swap()}_swapRenderStates(){if(this._renderState.next){if(this._renderState.locked)return this._renderState.swap=!0,void this.requestRender();if(this._renderState.swap=!0,0===this._renderState.swapFrames)return this._renderState.swapFrames=8,void this.requestRender();1==this._renderState.swapFrames--?this._swap():this.requestRender()}}_swap(){this._renderState.swap&&(this._renderState.swap=!1,e(this._renderState.next)&&(this._renderState.current.geometry.forEach((e=>e.destroy())),this._renderState.current=this._renderState.next,this._renderState.next=null))}_flushUpdates(){let e=this._patches.maxSize;for(;this._patches.size&&e--;)this._updateMesh(),this._swap()}_updateMesh(){const t=this._patches.peek();if(e(t)&&t.clear&&null!==this._renderState.next)return;const s=this._patches.dequeue();if(e(s)){if(!0===s.clear){if(!this.isReady)return;return this._renderState.next,void(this._renderState.next={geometry:new Map,metrics:null})}this.requestRender(),this._patch(s),s.end&&(this.ready(),this._swapRenderStates())}}_patch(e){p((t=>{this._remove(t,e.remove),this._insert(e.type,t,e.addOrUpdate,e.clear)}))}_insert(e,s,r,i){try{const n=o(this._renderState.next,this._renderState.current),a=null==r?void 0:r.data[s],h=n.geometry;if(t(a))return;h.has(s)||h.set(s,new T(s,this.stage)),h.get(s).insert(e,a),s===m.LABEL&&this._insertLabelMetrics(e,a.metrics,i)}catch(n){}}_insertLabelMetrics(e,s,r){const i=o(this._renderState.next,this._renderState.current);if(t(s))return;const n=x.from(s);if(t(i.metrics))i.metrics=n;else{if("update"===e){const e=n.getCursor();for(;e.next();)i.metrics.delete(e.id)}i.metrics.link(n)}}_remove(e,t){const s=o(this._renderState.next,this._renderState.current).geometry.get(e);t&&t.length&&s&&(s.remove(t),this._removeLabelMetrics(t))}_removeLabelMetrics(e){const{metrics:s}=o(this._renderState.next,this._renderState.current);if(!t(s)&&e.length)for(const t of e)for(;s.delete(t););}_dropPatches(){const e=new Array;let s=!1;for(;this._patches.size;){const r=this._patches.dequeue();if(t(r))break;if(r.clear){if(s)break;s=!0}e.push(r)}this._patches.clear(),e.forEach((e=>this._patches.enqueue(e)))}}class U extends y{constructor(e,t,s,r){super(e),this._pointToCallbacks=new Map,this._layer=s,this._layerView=t,this._onUpdate=r}renderChildren(e){this.attributeView.update(),this.hasAnimation&&e.painter.effects.integrate.draw(e,e.attributeView),super.renderChildren(e)}isUpdating(){return this.attributeView.isUpdating()}hitTest(e,t){const s=[e,t],r=u();return this._pointToCallbacks.set(s,r),this.requestRender(),r.promise}onTileData(e,t){e.patch(t),this.contains(e)||this.addChild(e),this.requestRender()}onTileError(e){this.contains(e)||this.addChild(e)}doRender(e){const{minScale:t,maxScale:s}=this._layer,r=e.state.scale;r<=(t||1/0)&&r>=s&&super.doRender(e)}onAttributeStoreUpdate(){this.hasLabels&&this._layerView.view.labelManager.requestUpdate(),this._onUpdate()}get hasAnimation(){return this.hasLabels}get hasLabels(){if("sublayers"in this._layer)return this._layer.sublayers.some((e=>e.labelingInfo&&e.labelingInfo.length&&e.labelsVisible));const e=this._layer.featureReduction,t=e&&"cluster"===e.type&&e.labelsVisible&&e.labelingInfo&&e.labelingInfo.length;return this._layer.labelingInfo&&this._layer.labelingInfo.length&&this._layer.labelsVisible||!!t}prepareRenderPasses(e){const t=e.registerRenderPass({name:"label",brushes:[V.label],target:()=>this.hasLabels?this.children:null,drawPhase:b.LABEL|b.LABEL_ALPHA}),s=e.registerRenderPass({name:"geometry",brushes:[V.fill,V.line,V.marker,V.text],target:()=>this.children,enableDefaultDraw:()=>!this._layerView.hasEffects,effects:[{apply:e.effects.outsideEffect,enable:()=>this._layerView.hasEffects,args:()=>this._layerView.effectLists.excluded},{apply:e.effects.insideEffect,enable:()=>this._layerView.hasEffects,args:()=>this._layerView.effectLists.included},{apply:e.effects.hittest,enable:()=>!!this._pointToCallbacks.size,args:()=>this._pointToCallbacks}]}),r=e.registerRenderPass({name:"highlight",brushes:[V.fill,V.line,V.marker,V.text],target:()=>this.children,drawPhase:b.HIGHLIGHT,enableDefaultDraw:()=>!1,effects:[{apply:e.effects.highlight,enable:()=>!!this._layerView.hasHighlight()}]});return[...super.prepareRenderPasses(e),s,r,t]}}let R=class extends C{install(e){const t=new U(this.tileInfoView,this.layerView,this.layer,(()=>this.notifyChange("updating")));this.featuresView=t,e.addChild(t)}uninstall(e){e.removeChild(this.featuresView),this.featuresView.destroy()}isUpdating(){const e=super.isUpdating(),t=!this.featuresView||this.featuresView.isUpdating(),s=e||t;return d("esri-2d-log-updating")&&console.log(`Updating SymbolTileRenderer ${s}\n  -> updatingTiles ${e}\n  -> updatingFeaturesView ${t}`),s}hitTest(e,t){return this.featuresView.hitTest(e,t)}supportsRenderer(e){return null!=e&&-1!==["simple","class-breaks","unique-value","dot-density","dictionary"].indexOf(e.type)}onConfigUpdate(e){let t=null;if("visualVariables"in e){const s=(w(e).visualVariables||[]).map((e=>{const t=e.clone();return"normalizationField"in e&&(t.normalizationField=null),e.valueExpression&&"$view.scale"!==e.valueExpression&&(t.valueExpression=null,t.field="nop"),t}));t=k(s)}this.featuresView.setRendererInfo(e,t,this.layerView.effects)}onTileData(e){const t=this.tiles.get(e.tileKey);t&&e.data&&this.featuresView.onTileData(t,e.data),this.layerView.view.labelManager.requestUpdate()}onTileError(e){const t=this.tiles.get(e.tileKey);t&&this.featuresView.onTileError(t)}forceAttributeTextureUpload(){this.featuresView.attributeView.forceTextureUpload()}lockGPUUploads(){this.featuresView.attributeView.lockTextureUpload(),this.tiles.forEach((e=>e.lock()))}unlockGPUUploads(){this.featuresView.attributeView.unlockTextureUpload(),this.tiles.forEach((e=>e.unlock()))}async getMaterialItems(e){return this.featuresView.getMaterialItems(e)}invalidateLabels(){this.featuresView.hasLabels&&this.layerView.view.labelManager.requestUpdate()}createTile(e){const t=this.tileInfoView.getTileBounds(c(),e);return new E(e,t,this.featuresView.attributeView)}disposeTile(e){this.featuresView.removeChild(e),e.destroy(),this.layerView.view.labelManager.requestUpdate()}};R=f([l("esri.views.2d.layers.features.tileRenderers.SymbolTileRenderer")],R);var j=R;export{j as default};
