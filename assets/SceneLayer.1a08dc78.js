var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable,a=(t,r,s)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[r]=s,n=(e,t)=>{for(var r in t||(t={}))i.call(t,r)&&a(e,r,t[r]);if(s)for(var r of s(t))o.call(t,r)&&a(e,r,t[r]);return e},l=(e,s)=>t(e,r(s));import{ar as p,as as d,at as y,cO as u,I as c,gh as h,gi as f,gj as g,gT as m,gk as v,ha as b,go as I,G as w,cm as L,i9 as F,fj as S,cH as j,d0 as O,h1 as E,F as T,J as _,gC as P,Q as x,gY as A,V as D,il as R,ib as U,ic as Q,im as q,gc as N,hd as k,ig as C,i2 as G,ie as V,hk as K,io as M,h3 as $,h4 as W,dm as z,ip as Z,h5 as H}from"./vendor.982f672a.js";import{R as J}from"./SceneService.5dc506e7.js";import{s as B,l as Y}from"./FetchAssociatedFeatureLayer.b174b266.js";import{s as X,l as ee,u as te,m as re}from"./I3SLayerDefinitions.e6a3c0d5.js";import"./resourceUtils.d536abab.js";let se=class extends u{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};p([d({type:String,json:{read:!0,write:!0}})],se.prototype,"name",void 0),p([d({type:String,json:{read:!0,write:!0}})],se.prototype,"field",void 0),p([d({type:[Number],json:{read:!0,write:!0}})],se.prototype,"currentRangeExtent",void 0),p([d({type:[Number],json:{read:!0,write:!0}})],se.prototype,"fullRangeExtent",void 0),p([d({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],se.prototype,"type",void 0),se=p([y("esri.layers.support.RangeInfo")],se);var ie=se;const oe=["3DObject","Point"],ae=c.getLogger("esri.layers.SceneLayer"),ne=H();let le=class extends(J(h(f(g(m(v(b(I)))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.definitionExpression=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return"string"==typeof e?n({url:e},t):e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var r,s,i,o;const a=null==(r=this.getFeatureType(null==t?void 0:t.feature))||null==(s=r.domains)?void 0:s[e];return a&&"inherited"!==a.type?a:null!=(i=null==(o=this.getField(e))?void 0:o.domain)?i:null}getFeatureType(e){return e&&w(this.associatedLayer)?this.associatedLayer.getFeatureType(e):null}get types(){return w(this.associatedLayer)?this.associatedLayer.types:[]}get typeIdField(){return w(this.associatedLayer)?this.associatedLayer.typeIdField:null}get formTemplate(){return w(this.associatedLayer)?this.associatedLayer.formTemplate:null}get fieldsIndex(){return new L(this.fields)}readNodePages(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:X.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return de[this.profile]||"mesh"}set renderer(e){F(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e}get capabilities(){const e=w(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:B,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:s,supportsUploadWithItemId:i,supportsReturnServiceEditsInSourceSpatialReference:o},data:{supportsZ:a,supportsM:n,isVersioned:l,supportsAttachment:p},operations:{supportsEditing:d,supportsUpdate:y,supportsQuery:u,supportsQueryAttachments:c}}=e,h=e.operations.supportsChangeTracking;return{query:t,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:o,supportsRollbackOnFailure:s,supportsGeometryUpdate:!1,supportsUploadWithItemId:i},data:{supportsAttachment:p,supportsZ:a,supportsM:n,isVersioned:l},operations:{supportsQuery:u,supportsQueryAttachments:c,supportsEditing:d&&h,supportsAdd:!1,supportsDelete:!1,supportsUpdate:y&&h}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){null!=e?this._override("editingEnabled",e):this._clearOverride("editingEnabled")}get defaultPopupTemplate(){return w(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0}get displayField(){return w(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const r=t.store.profile;return null!=r&&pe[r]?pe[r]:(ae.error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){const t=w(e)?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(S).then((()=>this._fetchService(t))).then((()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t)]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>j(this,{origin:"service"},t))).then((()=>F(this.renderer,this.fieldsIndex))).then((()=>this.finishLoadEditablePortalLayer(e)));return this.addResolvingPromise(r),Promise.resolve(this)}createQuery(){const e=new O;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(null!=e&&e.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(ae.error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return E(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return w(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),T(this.associatedLayer))throw new _("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new _("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new _("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new _("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const s of this.statisticsInfo)if(s.name===r.name){const e=P(this.parsedUrl.path,s.href);return x(e,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new _("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(1,l(n({},t),{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"}),e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(0,e)}async applyEdits(e,t){const r=await import("./editingSupport.b4bb5c5e.js");if(await this.load(),T(this.associatedLayer))throw new _(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),r.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&-1===oe.indexOf(e.layerType))throw new _("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new _("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new _("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});!function(e,t){let r=!1,s=!1;if(null==e)r=!0,s=!0;else{const i=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,s=i;break;case"vertex-reference-frame":r=!0,s=!i;break;default:r=!1}}if(!r)throw new _("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!s)throw new _("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new _("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),r=!!(w(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some((t=>t&&e.name===t.name))),s={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=s}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if(T(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(T(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=A(this);for(let r=0;r<e.length;r++){const s=e[r],i=this.originIdOf(s),o=this.associatedLayer.originIdOf(s);i<o&&(2===o||3===o)&&t.setAtOrigin(s,this.associatedLayer[s],o)}}async _setAssociatedFeatureLayer(e){if(-1===["mesh-pyramids","points"].indexOf(this.profile))return;const t=new Y(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(r){D(r)||this._logWarningOnPopupEnabled()}}_logWarningOnPopupEnabled(){R(this,["popupTemplate","popupEnabled"],(()=>this.popupEnabled&&null!=this.popupTemplate)).then((()=>()=>{const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?ae.warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):ae.info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}))}_validateElevationInfo(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"absolute-height"!==e.mode&&ae.warn(".elevationInfo=","Mesh scene layers only support absolute-height elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&ae.warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};p([d({types:{key:"type",base:U,typeMap:{selection:Q}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],le.prototype,"featureReduction",void 0),p([d({type:[ie],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],le.prototype,"rangeInfos",void 0),p([d({json:{read:!1}})],le.prototype,"associatedLayer",void 0),p([d({type:["show","hide"]})],le.prototype,"listMode",void 0),p([d({type:["ArcGISSceneServiceLayer"]})],le.prototype,"operationalLayerType",void 0),p([d({json:{read:!1},readOnly:!0})],le.prototype,"type",void 0),p([d(l(n({},ne.fields),{readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}}))],le.prototype,"fields",void 0),p([d()],le.prototype,"types",null),p([d()],le.prototype,"typeIdField",null),p([d()],le.prototype,"formTemplate",null),p([d({readOnly:!0})],le.prototype,"fieldsIndex",null),p([d({type:q,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],le.prototype,"floorInfo",void 0),p([d(ne.outFields)],le.prototype,"outFields",void 0),p([d({type:X,readOnly:!0,json:{read:!1}})],le.prototype,"nodePages",void 0),p([N("service","nodePages",["nodePages","pointNodePages"])],le.prototype,"readNodePages",null),p([d({type:[ee],readOnly:!0})],le.prototype,"materialDefinitions",void 0),p([d({type:[te],readOnly:!0})],le.prototype,"textureSetDefinitions",void 0),p([d({type:[re],readOnly:!0})],le.prototype,"geometryDefinitions",void 0),p([d({readOnly:!0})],le.prototype,"serviceUpdateTimeStamp",void 0),p([d({readOnly:!0})],le.prototype,"attributeStorageInfo",void 0),p([d({readOnly:!0})],le.prototype,"statisticsInfo",void 0),p([d({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],le.prototype,"definitionExpression",void 0),p([d({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],le.prototype,"path",void 0),p([d(k)],le.prototype,"elevationInfo",null),p([d({type:String})],le.prototype,"geometryType",null),p([d(C)],le.prototype,"labelsVisible",void 0),p([d({type:[G],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:V},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:V},write:!0}})],le.prototype,"labelingInfo",void 0),p([d(K)],le.prototype,"legendEnabled",void 0),p([d({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var r,s;if("number"==typeof e&&e>=0&&e<=1)return e;const i=null==(r=t.layerDefinition)||null==(s=r.drawingInfo)?void 0:s.transparency;return void 0!==i?M(i):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],le.prototype,"opacity",void 0),p([d({types:$,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],le.prototype,"renderer",null),p([d({json:{read:!1}})],le.prototype,"cachedDrawingInfo",void 0),p([N("service","cachedDrawingInfo")],le.prototype,"readCachedDrawingInfo",null),p([d({readOnly:!0,json:{read:!1}})],le.prototype,"capabilities",null),p([d({type:Boolean,json:{read:!1}})],le.prototype,"editingEnabled",null),p([d(W)],le.prototype,"popupEnabled",void 0),p([d({type:z,json:{name:"popupInfo",write:!0}})],le.prototype,"popupTemplate",void 0),p([d({readOnly:!0,json:{read:!1}})],le.prototype,"defaultPopupTemplate",null),p([d({type:String,json:{read:!1}})],le.prototype,"objectIdField",void 0),p([N("service","objectIdField",["objectIdField","fields"])],le.prototype,"readObjectIdField",null),p([d({type:String,json:{read:!1}})],le.prototype,"globalIdField",void 0),p([N("service","globalIdField",["globalIdField","fields"])],le.prototype,"readGlobalIdField",null),p([d({readOnly:!0,type:String,json:{read:!1}})],le.prototype,"displayField",null),p([d({type:String,json:{read:!1}})],le.prototype,"profile",void 0),p([N("service","profile",["store.profile"])],le.prototype,"readProfile",null),p([d({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],le.prototype,"normalReferenceFrame",void 0),p([d(Z)],le.prototype,"screenSizePerspectiveEnabled",void 0),le=p([y("esri.layers.SceneLayer")],le);const pe={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},de={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};var ye=le;export{ye as default};
