var e=Object.defineProperty,t=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,s=(t,o,r)=>o in t?e(t,o,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[o]=r;import{gS as i,gU as l,e9 as a,ea as n,gT as p,eb as y,ef as u,cV as d,G as c,cO as h,Q as S,Z as v,ar as f,as as m,d$ as b,ha as g,hk as C,ee as O,at as R,hl as j,hm as w,hn as x,ho as F,hp as k}from"./vendor.6e209a4d.js";const P=["atom","xml"],G={base:j,key:"type",typeMap:{"simple-line":w},errorContext:"symbol"},M={base:j,key:"type",typeMap:{"picture-marker":x,"simple-marker":F},errorContext:"symbol"},E={base:j,key:"type",typeMap:{"simple-fill":k},errorContext:"symbol"};let L=class extends(i(l(a(n(p(y(u))))))){constructor(...e){super(...e),this.description=null,this.legendEnabled=!0,this.lineSymbol=null,this.pointSymbol=null,this.polygonSymbol=null,this.operationalLayerType="GeoRSS",this.outSpatialReference=null,this.url=null,this.type="geo-rss"}normalizeCtorArgs(e,i){return"string"==typeof e?((e,i)=>{for(var l in i||(i={}))o.call(i,l)&&s(e,l,i[l]);if(t)for(var l of t(i))r.call(i,l)&&s(e,l,i[l]);return e})({url:e},i):e}get title(){const e=this._get("title");return e&&"defaults"!==this.originOf("title")?e:this.url?d(this.url,P)||"GeoRSS":e||""}set title(e){this._set("title",e)}readFeatureCollections(e,t){return t.featureCollection.layers.forEach((e=>{const t=e.layerDefinition.drawingInfo.renderer.symbol;t&&"esriSFS"===t.type&&t.outline&&-1!==t.outline.style.indexOf("esriSFS")&&(t.outline.style="esriSLSSolid")})),t.featureCollection.layers}load(e){const t=c(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service","Feature Service","Feature Collection","Scene Service"]},e).catch(h).then((()=>this._fetchService(t)))),Promise.resolve(this)}async _fetchService(e){const{data:t}=await S(v.geoRSSServiceUrl,{query:{url:this.url,refresh:!!this.loaded||void 0,outSR:this.outSpatialReference?JSON.stringify(this.outSpatialReference.toJSON()):void 0},signal:e});this.read(t,{origin:"service"})}};f([m()],L.prototype,"description",void 0),f([m({json:{origins:{service:{read:{source:"name",reader:e=>e||void 0}}}}})],L.prototype,"title",null),f([m()],L.prototype,"featureCollections",void 0),f([b("service","featureCollections",["featureCollection.layers"])],L.prototype,"readFeatureCollections",null),f([m(g)],L.prototype,"id",void 0),f([m(C)],L.prototype,"legendEnabled",void 0),f([m({types:G,json:{write:!0}})],L.prototype,"lineSymbol",void 0),f([m({type:["show","hide"]})],L.prototype,"listMode",void 0),f([m({types:M,json:{write:!0}})],L.prototype,"pointSymbol",void 0),f([m({types:E,json:{write:!0}})],L.prototype,"polygonSymbol",void 0),f([m({type:["GeoRSS"]})],L.prototype,"operationalLayerType",void 0),f([m()],L.prototype,"outSpatialReference",void 0),f([m(O)],L.prototype,"url",void 0),f([m({readOnly:!0,json:{read:!1},value:"geo-rss"})],L.prototype,"type",void 0),L=f([R("esri.layers.GeoRSSLayer")],L);var T=L;export{T as default};
