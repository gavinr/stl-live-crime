import{gs as e,gt as t,G as n}from"./vendor.6e209a4d.js";function r(t){return e(`esri/libs/i3s/${t}`)}let o,s,i;async function a(e){await p();const t=[e.geometryBuffer];return{result:d(e,t),transferList:t}}async function f(e){var n;await p();const r=[e.geometryBuffer],{geometryBuffer:o}=e,s=o.byteLength,a=i._malloc(s),f=new Uint8Array(i.HEAPU8.buffer,a,s);f.set(new Uint8Array(o));const c=i.dracoDecompressPointCloudData(a,f.byteLength);if(i._free(a),c.error.length>0)throw`i3s.wasm: ${c.error}`;const u=(null==(n=c.featureIds)?void 0:n.length)>0?t(c.featureIds):null,l=t(c.positions);return u&&r.push(u.buffer),r.push(l.buffer),{result:{positions:l,featureIds:u},transferList:r}}async function c(e){await p(),h(e);const t={buffer:e.buffer};return{result:t,transferList:[t.buffer]}}async function u(e){await p(),b(e)}async function l(e){await p(),i.setLegacySchema(e.context,e.jsonSchema)}function y(e){E(e)}function b(e){const t=e.modifications,n=i._malloc(8*t.length),r=new Float64Array(i.HEAPU8.buffer,n,t.length);for(let o=0;o<t.length;++o)r[o]=t[o];i.setModifications(e.context,n,t.length,e.isGeodetic),i._free(n)}function d(e,r){if(!i)return null;const{context:o,localOrigin:s,globalTrafo:a,mbs:f,obb:c,elevationOffset:u,geometryBuffer:l,geometryDescriptor:y,indexToVertexProjector:b,vertexToRenderProjector:d}=e,m=i._malloc(l.byteLength),h=i._malloc(33*Float64Array.BYTES_PER_ELEMENT),E=new Uint8Array(i.HEAPU8.buffer,m,l.byteLength);E.set(new Uint8Array(l));const p=new Float64Array(i.HEAPU8.buffer,h,33);g(p,s);let w=p.byteOffset+3*p.BYTES_PER_ELEMENT,A=new Float64Array(p.buffer,w);g(A,a),w+=16*p.BYTES_PER_ELEMENT,A=new Float64Array(p.buffer,w),g(A,f),w+=4*p.BYTES_PER_ELEMENT,n(c)&&(A=new Float64Array(p.buffer,w),g(A,c.center),w+=3*p.BYTES_PER_ELEMENT,A=new Float64Array(p.buffer,w),g(A,c.halfSize),w+=3*p.BYTES_PER_ELEMENT,A=new Float64Array(p.buffer,w),g(A,c.quaternion));const L=y,_={isDraco:!1,isLegacy:!1,color:e.layouts.some((e=>e.some((e=>"color"===e.name)))),normal:e.needNormals&&e.layouts.some((e=>e.some((e=>"normalCompressed"===e.name)))),uv0:e.layouts.some((e=>e.some((e=>"uv0"===e.name)))),uvRegion:e.layouts.some((e=>e.some((e=>"uvRegion"===e.name)))),featureIndex:L.featureIndex},P=i.process(o,!!e.obb,m,E.byteLength,L,_,h,u,b,d,e.normalReferenceFrame);if(i._free(h),i._free(m),P.error.length>0)throw`i3s.wasm: ${P.error}`;if(P.discarded)return null;const T=P.componentOffsets.length>0?t(P.componentOffsets):null,I=P.featureIds.length>0?t(P.featureIds):null,F=t(P.interleavedVertedData).buffer,M=1===P.indicesType?t(new Uint16Array(P.indices.buffer,P.indices.byteOffset,P.indices.byteLength/2)):t(new Uint32Array(P.indices.buffer,P.indices.byteOffset,P.indices.byteLength/4)),O=t(P.positions),B=1===P.positionIndicesType?t(new Uint16Array(P.positionIndices.buffer,P.positionIndices.byteOffset,P.positionIndices.byteLength/2)):t(new Uint32Array(P.positionIndices.buffer,P.positionIndices.byteOffset,P.positionIndices.byteLength/4)),R={layout:e.layouts[0],interleavedVertexData:F,indices:M,hasColors:P.hasColors,hasModifications:P.hasModifications,positionData:{data:O,indices:B}};return I&&r.push(I.buffer),T&&r.push(T.buffer),r.push(F),r.push(M.buffer),r.push(O.buffer),r.push(B.buffer),{componentOffsets:T,featureIds:I,transformedGeometry:R,obb:P.obb}}function m(e){return 0===e?0:1===e?1:2===e?2:3}function h(e){const{context:t,buffer:n}=e,r=i._malloc(n.byteLength),o=n.byteLength/Float64Array.BYTES_PER_ELEMENT,s=new Float64Array(i.HEAPU8.buffer,r,o),a=new Float64Array(n);s.set(a),i.filterOBBs(t,r,o),a.set(s),i._free(r)}function E(e){i&&i.destroy(e)}function g(e,t){for(let n=0;n<t.length;++n)e[n]=t[n]}function p(){return i?Promise.resolve():(s||(s=(o||(o=new Promise((e=>import("./i3s.7ab5d30f.js").then((function(e){return e.i})).then((({default:t})=>{const n=t({locateFile:r,onRuntimeInitialized:()=>e(n)});delete n.then})))).catch((e=>Promise.reject(e)))),o).then((e=>{i=e,s=null}))),s)}const w={transform:d,destroy:E};export{y as destroyContext,f as dracoDecompressPointCloudData,c as filterObbsForModifications,h as filterObbsForModificationsSync,p as initialize,m as interpretObbModificationResults,a as process,l as setLegacySchema,u as setModifications,b as setModificationsSync,w as test};
