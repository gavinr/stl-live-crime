var e=Object.defineProperty,t=Object.getOwnPropertySymbols,a=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,s=(t,a,r)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[a]=r,i=(e,i)=>{for(var d in i||(i={}))a.call(i,d)&&s(e,d,i[d]);if(t)for(var d of t(i))r.call(i,d)&&s(e,d,i[d]);return e};import{bz as d,J as n,cF as l,G as o,er as u,e0 as p,j as c}from"./vendor.6e209a4d.js";async function h(e,t,a,r={}){let s,u;const p={edits:a,result:new Promise(((e,t)=>{s=e,u=t}))};e.emit("apply-edits",p);try{var c;const{results:u,edits:p}=await async function(e,t,a,r){if(await e.load(),!function(e){return e&&null!=e.applyEdits}(t))return Promise.reject(new n(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e}));if(!e.editingEnabled)throw new n(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:s,options:d}=await async function(e,t,a){const r=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),s=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments);if(!t||!r&&!s)throw new n(`${e.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!e.capabilities.data.isVersioned&&a&&a.gdbVersion)throw new n(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!e.capabilities.editing.supportsRollbackOnFailure&&a&&a.rollbackOnFailureEnabled)throw new n(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!e.capabilities.editing.supportsGlobalId&&a&&a.globalIdUsed)throw new n(`${e.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!e.capabilities.editing.supportsGlobalId&&s)throw new n(`${e.type}-layer:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!a||!a.globalIdUsed)&&s)throw new n(`${e.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const d=i({},a);if(null!=d.rollbackOnFailureEnabled||e.capabilities.editing.supportsRollbackOnFailure||(d.rollbackOnFailureEnabled=!0),!1===d.rollbackOnFailureEnabled&&"original-and-current-features"===d.returnServiceEditsOption)throw new n(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true.");if(!e.capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference&&d.returnServiceEditsInSourceSR)throw new n(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(d.returnServiceEditsInSourceSR&&"original-and-current-features"!==d.returnServiceEditsOption)throw new n(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsOption' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const u=i({},t);if(u.addFeatures=t&&l.isCollection(t.addFeatures)?t.addFeatures.toArray():u.addFeatures||[],u.updateFeatures=t&&l.isCollection(t.updateFeatures)?t.updateFeatures.toArray():u.updateFeatures||[],u.deleteFeatures=t&&l.isCollection(t.deleteFeatures)?t.deleteFeatures.toArray():u.deleteFeatures||[],u.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new n(`${e.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(u.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new n(`${e.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(u.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new n(`${e.type}-layer:unsupported-operation`,"Layer does not support deleting features.");u.addAttachments=u.addAttachments||[],u.updateAttachments=u.updateAttachments||[],u.deleteAttachments=u.deleteAttachments||[],u.addFeatures=u.addFeatures.map(f),u.updateFeatures=u.updateFeatures.map(f);const p=a&&a.globalIdUsed;return u.addFeatures.forEach((t=>function(e,t,a){y(e,t,a)}(t,e,p))),u.updateFeatures.forEach((t=>function(e,t,a){if(y(e,t,a),"geometry"in e&&o(e.geometry)&&!t.capabilities.editing.supportsGeometryUpdate)throw new n(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}(t,e,p))),u.deleteFeatures.forEach((t=>function(e,t,a){y(e,t,a)}(t,e,p))),u.addAttachments.forEach((t=>m(t,e))),u.updateAttachments.forEach((t=>m(t,e))),{edits:await b(u),options:d}}(e,a,r);return s.addFeatures.length||s.updateFeatures.length||s.deleteFeatures.length||s.addAttachments.length||s.updateAttachments.length||s.deleteAttachments.length?{edits:s,results:await t.applyEdits(s,d)}:{edits:s,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}(e,t,a,r),h=e=>e.filter((e=>!e.error)).map(d),g={edits:p,addedFeatures:h(u.addFeatureResults),updatedFeatures:h(u.updateFeatureResults),deletedFeatures:h(u.deleteFeatureResults),addedAttachments:h(u.addAttachmentResults),updatedAttachments:h(u.updateAttachmentResults),deletedAttachments:h(u.deleteAttachmentResults)};return null!=(c=u.editedFeatureResults)&&c.length&&(g.editedFeatures=u.editedFeatureResults),(g.addedFeatures.length||g.updatedFeatures.length||g.deletedFeatures.length||g.addedAttachments.length||g.updatedAttachments.length||g.deletedAttachments.length)&&e.emit("edits",g),s(g),u}catch(h){throw u(h),h}}function y(e,t,a){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new n(`${t.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&o(e.geometry)){if(e.geometry.hasZ&&!1===t.capabilities.data.supportsZ)throw new n(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities.data.supportsM)throw new n(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function m(e,t){const{feature:a,attachment:r}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!r.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!r.data&&!r.uploadId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(r.data instanceof File&&r.data.name||r.name))throw new n(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities.editing.supportsUploadWithItemId&&r.uploadId)throw new n(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof r.data){const e=u(r.data);if(e&&!e.isBase64)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}async function b(e){const t=e.addFeatures,a=e.updateFeatures,r=t.concat(a).map((e=>e.geometry)),s=await p(r),i=t.length,d=a.length;return s.slice(0,i).forEach(((t,a)=>e.addFeatures[a].geometry=t)),s.slice(i,i+d).forEach(((t,a)=>e.updateFeatures[a].geometry=t)),e}function f(e){const t=new c;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}export{h as applyEdits};
