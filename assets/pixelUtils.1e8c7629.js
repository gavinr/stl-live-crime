import{I as t,ar as e,as as i,dI as s,at as n,c_ as l,J as r,F as a,bz as o}from"./vendor.6e209a4d.js";var h;const f=t.getLogger("esri.layers.support.PixelBlock");let c=h=class extends l{constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.pixels=null,this.statistics=null}static createEmptyBand(t,e){return new(h.getPixelArrayConstructor(t))(e)}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"u32":e=Uint32Array;break;case"f32":e=Float32Array;break;case"f64":e=Float64Array;break;case"c64":case"c128":case"unknown":e=Float32Array}return e}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].indexOf(e)>-1?e="u8":-1===["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].indexOf(e)&&(e="f32"),e}getPlaneCount(){return this.pixels&&this.pixels.length}addData(t){if(!t.pixels||t.pixels.length!==this.width*this.height)throw new r("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(t.statistics||{minValue:null,maxValue:null})}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(t)for(let i=0;i<t.length;i++)t[i]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t)return;let e;switch(t){case"u8":e=[0,255];break;case"u16":e=[0,65535];break;case"u32":e=[0,4294967295];break;case"s8":e=[-128,127];break;case"s16":e=[-32768,32767];break;case"s32":e=[-2147483648,2147483647];break;default:e=[-34e38,34e38]}const[i,s]=e,n=this.pixels,l=this.width*this.height,r=n.length;let a,o,f;const c=[];for(let u=0;u<r;u++){f=h.createEmptyBand(t,l),a=n[u];for(let t=0;t<l;t++)o=a[t],f[t]=o>s?s:o<i?i:o;c.push(f)}this.pixels=c,this.pixelType=t}extractBands(t){if(a(t)||0===t.length||null==this.pixels||0===this.pixels.length)return this;const e=this.pixels.length,i=t.some((t=>t>=this.pixels.length)),s=e===t.length&&!t.some(((t,e)=>t!==e));return i||s?this:new h({pixelType:this.pixelType,width:this.width,height:this.height,mask:this.mask,validPixelCount:this.validPixelCount,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>this.pixels[t])),statistics:this.statistics&&t.map((t=>this.statistics[t]))})}clone(){const t=new h({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0));const i=h.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const s=this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=s?this.pixels[e].slice(0,this.pixels[e].length):new i(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=o(this.statistics[e]);return t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:i,pixels:s}=this;if(!t||!s||!s.length)return void f.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let n,l,r,a;n=l=r=s[0],s.length>=3?(l=s[1],r=s[2]):2===s.length&&(l=s[1]);const o=new Uint32Array(t),h=this.width*this.height;if(n.length===h)if(e&&e.length===h)if(i)for(a=0;a<h;a++)e[a]&&(o[a]=e[a]<<24|r[a]<<16|l[a]<<8|n[a]);else for(a=0;a<h;a++)e[a]&&(o[a]=255<<24|r[a]<<16|l[a]<<8|n[a]);else for(a=0;a<h;a++)o[a]=255<<24|r[a]<<16|l[a]<<8|n[a];else f.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:i,statistics:s}=this;if(!t||!e||!e.length)return void f.error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const n=this.pixelType;let l=1,r=0,a=1;if(s&&s.length>0)r=s.map((t=>t.minValue)).reduce(((t,e)=>Math.min(t,e))),a=s.map((t=>t.maxValue-t.minValue)).reduce(((t,e)=>Math.max(t,e))),l=255/a;else{let t=255;"s8"===n?(r=-128,t=127):"u16"===n?t=65535:"s16"===n?(r=-32768,t=32767):"u32"===n?t=4294967295:"s32"===n?(r=-2147483648,t=2147483647):"f32"===n?(r=-34e38,t=34e38):"f64"===n&&(r=-Number.MAX_VALUE,t=Number.MAX_VALUE),l=255/(t-r)}const o=new Uint32Array(t),h=this.width*this.height;let c,u,p,x,m;if(c=u=p=e[0],c.length!==h)return f.error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(u=e[1],e.length>=3&&(p=e[2]),i&&i.length===h)for(x=0;x<h;x++)i[x]&&(o[x]=255<<24|(p[x]-r)*l<<16|(u[x]-r)*l<<8|(c[x]-r)*l);else for(x=0;x<h;x++)o[x]=255<<24|(p[x]-r)*l<<16|(u[x]-r)*l<<8|(c[x]-r)*l;else if(i&&i.length===h)for(x=0;x<h;x++)m=(c[x]-r)*l,i[x]&&(o[x]=255<<24|m<<16|m<<8|m);else for(x=0;x<h;x++)m=(c[x]-r)*l,o[x]=255<<24|m<<16|m<<8|m}_fillFrom32Bit(t){const{pixels:e,mask:i}=this;if(!t||!e||!e.length)return f.error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let s,n,l,r;s=n=l=e[0],e.length>=3?(n=e[1],l=e[2]):2===e.length&&(n=e[1]);const a=this.width*this.height;if(s.length!==a)return f.error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let o=0;if(i&&i.length===a)for(r=0;r<a;r++)t[o++]=s[r],t[o++]=n[r],t[o++]=l[r],t[o++]=1&i[r];else for(r=0;r<a;r++)t[o++]=s[r],t[o++]=n[r],t[o++]=l[r],t[o++]=1}_calculateBandStatistics(t,e){let i=1/0,s=-1/0;const n=t.length;let l,r=0;if(e)for(l=0;l<n;l++)e[l]&&(r=t[l],i=r<i?r:i,s=r>s?r:s);else for(l=0;l<n;l++)r=t[l],i=r<i?r:i,s=r>s?r:s;return{minValue:i,maxValue:s}}};e([i({json:{write:!0}})],c.prototype,"width",void 0),e([i({json:{write:!0}})],c.prototype,"height",void 0),e([i({json:{write:!0}})],c.prototype,"pixelType",void 0),e([s("pixelType")],c.prototype,"castPixelType",null),e([i({json:{write:!0}})],c.prototype,"validPixelCount",void 0),e([i({json:{write:!0}})],c.prototype,"mask",void 0),e([i({json:{write:!0}})],c.prototype,"maskIsAlpha",void 0),e([i({json:{write:!0}})],c.prototype,"pixels",void 0),e([i({json:{write:!0}})],c.prototype,"statistics",void 0),c=h=e([n("esri.layers.support.PixelBlock")],c);var u=c;const p=function(t){return t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0};function x(t,e){if(null==e||!e.length||!p(t))return t;const i=t.pixels.length;return e&&e.some((t=>t>=i))||1===i&&1===e.length&&0===e[0]?t:i!==e.length||e.some(((t,e)=>t!==e))?new u({pixelType:t.pixelType,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:e.map((e=>t.pixels[e])),statistics:t.statistics&&e.map((e=>t.statistics[e]))}):t}function m(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const i=e.sort(((t,e)=>t[0]-e[0]));let s=0;i[0][0]<0&&(s=i[0][0]);const n=Math.max(256,i[i.length-1][0]-s+1),l=new Uint8Array(4*n),r=[];let a,o=0,h=0;const f=5===i[0].length;if(n>65536)return i.forEach((t=>{r[t[0]-s]=f?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:r,offset:s,alphaSpecified:f};if(t.fillUnspecified)for(a=i[h],o=a[0]-s;o<n;o++)l[4*o]=a[1],l[4*o+1]=a[2],l[4*o+2]=a[3],l[4*o+3]=f?a[4]:255,o===a[0]-s&&(a=h===i.length-1?a:i[++h]);else for(o=0;o<i.length;o++)a=i[o],h=4*(a[0]-s),l[h]=a[1],l[h+1]=a[2],l[h+2]=a[3],l[h+3]=f?a[4]:255;return{indexedColormap:l,offset:s,alphaSpecified:f}}function d(t,e){if(!p(t))return t;if(!e&&(e.indexedColormap||e.indexed2DColormap))return t;const i=t.clone(),s=i.pixels;let n=i.mask;const l=i.width*i.height;if(1!==s.length)return t;const{indexedColormap:r,indexed2DColormap:a,offset:o,alphaSpecified:h}=e,f=r.length-1;let c=0;const u=s[0],x=new Uint8Array(u.length),m=new Uint8Array(u.length),d=new Uint8Array(u.length);let g,y=0;if(r)if(n)for(c=0;c<l;c++)n[c]&&(y=4*(u[c]-o),y<o||y>f?n[c]=0:(x[c]=r[y],m[c]=r[y+1],d[c]=r[y+2],n[c]=r[y+3]));else{for(n=new Uint8Array(l),c=0;c<l;c++)y=4*(u[c]-o),y<o||y>f?n[c]=0:(x[c]=r[y],m[c]=r[y+1],d[c]=r[y+2],n[c]=r[y+3]);i.mask=n}else if(n)for(c=0;c<l;c++)n[c]&&(g=a[u[c]],x[c]=g[0],m[c]=g[1],d[c]=g[2],n[c]=g[3]);else{for(n=new Uint8Array(l),c=0;c<l;c++)g=a[u[c]],x[c]=g[0],m[c]=g[1],d[c]=g[2],n[c]=g[3];i.mask=n}return i.pixels=[x,m,d],i.statistics=null,i.pixelType="u8",i.maskIsAlpha=h,i}function g(t){if(!p(t))return null;t.statistics||t.updateStatistics();const{pixels:e,mask:i,pixelType:s,statistics:n}=t,l=t.width*t.height,r=e.length;let a,o,h,f,c;const u=[],x=[];let m,d,g,y,w,k,A,M,v,U;const b=256;for(f=0;f<r;f++){if(m=new Uint32Array(b),g=e[f],"u8"===s)if(a=-.5,o=255.5,i)for(c=0;c<l;c++)i[c]&&m[g[c]]++;else for(c=0;c<l;c++)m[g[c]]++;else{if(a=n[f].minValue,o=n[f].maxValue,h=(o-a)/b,d=new Uint32Array(257),i)for(c=0;c<l;c++)i[c]&&d[Math.floor((g[c]-a)/h)]++;else for(c=0;c<l;c++)d[Math.floor((g[c]-a)/h)]++;for(c=0;c<255;c++)m[c]=d[c];m[255]=d[255]+d[256]}for(u.push({min:a,max:o,size:b,counts:m}),y=0,w=0,M=0,c=0;c<b;c++)y+=m[c],w+=c*m[c];for(v=w/y,c=0;c<b;c++)M+=m[c]*(c-v)**2;U=Math.sqrt(M/(y-1)),h=(o-a)/b,k=(v+.5)*h+a,A=U*h,x.push({min:a,max:o,avg:k,stddev:A})}return{statistics:x,histograms:u}}function y(t){const e=[];for(let i=0;i<t.length;i++){const{min:s,max:n,size:l,counts:r}=t[i];let a=0,o=0;for(let t=0;t<l;t++)a+=r[t],o+=t*r[t];const h=o/a;let f=0;for(let t=0;t<l;t++)f+=r[t]*(t-h)**2;const c=(n-s)/l,u=(h+.5)*c+s,p=Math.sqrt(f/(a-1))*c;e.push({min:s,max:n,avg:u,stddev:p})}return e}function w(t){const{minCutOff:e,maxCutOff:i,gamma:s,pixelType:n}=t,l=t.outMin||0,r=t.outMax||255;if(-1===["u8","u16","s8","s16"].indexOf(n))return null;const a=e.length;let o,h,f=0;"s8"===n?f=-127:"s16"===n&&(f=-32767);let c=256;["u16","s16"].indexOf(n)>-1&&(c=65536);const u=[],p=[],x=r-l;for(o=0;o<a;o++)p[o]=i[o]-e[o],u[o]=x/(i[o]-e[o]);const m=s&&s.length>=a,d=[];if(m)for(o=0;o<a;o++)s[o]>1?s[o]>2?d[o]=6.5+(s[o]-2)**2.5:d[o]=6.5+100*(2-s[o])**4:d[o]=1;let g;const y=[];let w,k,A;if(m)for(o=0;o<a;o++){for(A=[],h=0;h<c;h++)w=h+f,g=(w-e[o])/p[o],k=1,s[o]>1&&(k-=(1/x)**(g*d[o])),w<i[o]&&w>e[o]?A[h]=Math.floor(k*x*g**(1/s[o]))+l:w>=i[o]?A[h]=r:A[h]=l;y[o]=A}else for(o=0;o<a;o++){for(A=[],h=0;h<c;h++)w=h+f,w<=e[o]?A[h]=l:w>=i[o]?A[h]=r:A[h]=Math.floor((w-e[o])/p[o]*x)+l;y[o]=A}if(null!=t.contrastOffset){const e=function(t,e){const i=Math.min(Math.max(t,-100),100),s=Math.min(Math.max(e,-100),100),n=255,l=128;let r,a;const o=new Uint8Array(256);for(r=0;r<256;r++)i>0&&i<100?a=(200*r-100*n+2*n*s)/(2*(100-i))+l:i<=0&&i>-100?a=(200*r-100*n+2*n*s)*(100+i)/2e4+l:100===i?(a=200*r-100*n+(n+1)*(100-i)+2*n*s,a=a>0?n:0):-100===i&&(a=l),o[r]=a>n?n:a<0?0:a;return o}(t.contrastOffset,t.brightnessOffset);for(o=0;o<a;o++)for(A=y[o],h=0;h<c;h++)A[h]=e[A[h]]}return{lut:y,offset:f}}function k(t,e=256){e=Math.min(e,256);const{size:i,counts:s}=t,n=new Uint8Array(i),l=s.reduce(((t,i)=>t+i/e),0);let r=0,a=0,o=0,h=l;for(let f=0;f<i;f++)if(o+=s[f],!(f<i-1&&o+s[f+1]<h)){for(;r<e-1&&h<o;)r++,h+=l;for(let t=a;t<=f;t++)n[t]=r;a=f+1}for(let f=a;f<i;f++)n[f]=e-1;return n}function A(t,e){if(!p(t))return null;const i=t.clone(),{pixels:s,mask:n}=i,{minCutOff:l,maxCutOff:r,gamma:a}=e,o=e.outMin||0,h=e.outMax||255,f=i.width*i.height,c=s.length;let u,x,m,d,g;const y=h-o,w=[],k=[];for(u=0;u<c;u++)k[u]=r[u]-l[u],w[u]=y/(r[u]-l[u]);const A=a&&a.length>=c,M=[];if(A)for(u=0;u<c;u++)a[u]>1?a[u]>2?M[u]=6.5+(a[u]-2)**2.5:M[u]=6.5+100*(2-a[u])**4:M[u]=1;if(A)if(null!=n){for(x=0;x<f;x++)if(n[x])for(u=0;u<c;u++)m=s[u][x],g=(m-l[u])/k[u],d=1,a[u]>1&&(d-=(1/y)**(g*M[u])),m<r[u]&&m>l[u]?s[u][x]=Math.floor(d*y*g**(1/a[u]))+o:m>=r[u]?s[u][x]=h:s[u][x]=o}else for(x=0;x<f;x++)for(u=0;u<c;u++)m=s[u][x],g=(m-l[u])/k[u],d=1,a[u]>1&&(d-=(1/y)**(g*M[u])),m<r[u]&&m>l[u]?s[u][x]=Math.floor(d*y*g**(1/a[u]))+o:m>=r[u]?s[u][x]=h:s[u][x]=o;else if(null!=n){for(x=0;x<f;x++)if(n[x])for(u=0;u<c;u++)m=s[u][x],m<r[u]&&m>l[u]?s[u][x]=Math.floor((m-l[u])/k[u]*y)+o:m>=r[u]?s[u][x]=h:s[u][x]=o}else for(x=0;x<f;x++)for(u=0;u<c;u++)m=s[u][x],m<r[u]&&m>l[u]?s[u][x]=Math.floor((m-l[u])/k[u]*y)+o:m>=r[u]?s[u][x]=h:s[u][x]=o;return i.pixelType="u8",i.updateStatistics(),i}function M(t,e){if(!p(t))return null;const{pixels:i,mask:s}=t,n=t.width*t.height,l=i.length;let r=e.lut;const{offset:a}=e;let o,h;r&&1===r[0].length&&(r=i.map((()=>r)));const f=[];let c,x,m;if(a)if(null==s)for(o=0;o<l;o++){for(c=i[o],x=r[o],m=new Uint8Array(n),h=0;h<n;h++)m[h]=x[c[h]-a];f.push(m)}else for(o=0;o<l;o++){for(c=i[o],x=r[o],m=new Uint8Array(n),h=0;h<n;h++)s[h]&&(m[h]=x[c[h]-a]);f.push(m)}else if(null==s)for(o=0;o<l;o++){for(c=i[o],x=r[o],m=new Uint8Array(n),h=0;h<n;h++)m[h]=x[c[h]];f.push(m)}else for(o=0;o<l;o++){for(c=i[o],x=r[o],m=new Uint8Array(n),h=0;h<n;h++)s[h]&&(m[h]=x[c[h]]);f.push(m)}const d=new u({width:t.width,height:t.height,pixels:f,mask:s,pixelType:"u8"});return d.updateStatistics(),d}function v(t,e){if(!p(t))return null;const i=t.clone(),{pixels:s}=i,n=i.width*i.height,l=e.length,r=Math.floor(l/2),a=e[Math.floor(r)],o=s[0];let h,f,c,u,x,m,d=!1;const g=new Uint8Array(n),y=new Uint8Array(n),w=new Uint8Array(n);let k=i.mask;const A=4===e[0].mappedColor.length;for(k||(k=new Uint8Array(n),k.fill(A?255:1),i.mask=k),x=0;x<n;x++)if(k[x]){for(h=o[x],d=!1,m=r,f=a,c=0,u=l-1;u-c>1;){if(h===f.value){d=!0;break}h>f.value?c=m:u=m,m=Math.floor((c+u)/2),f=e[Math.floor(m)]}d||(h===e[c].value?(f=e[c],d=!0):h===e[u].value?(f=e[u],d=!0):h<e[c].value?(d=!1,f=null):h>e[c].value&&(h<e[u].value?(f=e[c],d=!0):u===l-1?(d=!1,f=null):(f=e[u],d=!0))),d?(g[x]=f.mappedColor[0],y[x]=f.mappedColor[1],w[x]=f.mappedColor[2],k[x]=f.mappedColor[3]):g[x]=y[x]=w[x]=k[x]=0}return i.pixels=[g,y,w],i.mask=k,i.pixelType="u8",i.maskIsAlpha=A,i}function U(t,e){if(!t||0===t.length)return null;const i=t.filter((t=>t.pixelBlock))[0];if(!i)return null;const s=(i.extent.xmax-i.extent.xmin)/i.pixelBlock.width,n=(i.extent.ymax-i.extent.ymin)/i.pixelBlock.height,l=.01*Math.min(s,n),r=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>l?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>l?t.extent.xmin-e.extent.xmin:0)),a=Math.min.apply(null,r.map((t=>t.extent.xmin))),o=Math.min.apply(null,r.map((t=>t.extent.ymin))),h=Math.max.apply(null,r.map((t=>t.extent.xmax))),f=Math.max.apply(null,r.map((t=>t.extent.ymax))),c={x:Math.round((e.xmin-a)/s),y:Math.round((f-e.ymax)/n)},u={width:Math.round((h-a)/s),height:Math.round((f-o)/n)},p={width:Math.round((e.xmax-e.xmin)/s),height:Math.round((e.ymax-e.ymin)/n)};return Math.round(u.width/i.pixelBlock.width)*Math.round(u.height/i.pixelBlock.height)!==r.length||c.x<0||c.y<0||u.width<p.width||u.height<p.height?null:{extent:e,pixelBlock:B(r.map((t=>t.pixelBlock)),u,c,p)}}function b(t,e,i,s,n,l){const{width:r,height:a}=i.block,{x:o,y:h}=i.offset,{width:f,height:c}=i.mosaic,u=function(t,e,i,s,n,l,r,a){return{xmin:n<=i*t?0:n<i*t+t?n-i*t:t,ymin:l<=s*e?0:l<s*e+e?l-s*e:e,xmax:n+r<=i*t?0:n+r<i*t+t?n+r-i*t:t,ymax:l+a<=s*e?0:l+a<s*e+e?l+a-s*e:e}}(r,a,s,n,o,h,f,c);let p=0,x=0;if(l){const t=l.hasGCSSShiftTransform?360:l.halfWorldWidth,e=r*l.resolutionX,i=l.startX+s*e,n=i+e;i<t&&n>t?x=l.rightPadding:i>=t&&(p=l.leftMargin-l.rightPadding,x=0)}if(u.xmax-=x,"number"!=typeof e)for(let m=u.ymin;m<u.ymax;m++){const i=(n*a+m-h)*f+(s*r-o)+p,l=m*r;for(let s=u.xmin;s<u.xmax;s++)t[i+s]=e[l+s]}else for(let m=u.ymin;m<u.ymax;m++){const i=(n*a+m-h)*f+(s*r-o)+p;for(let s=u.xmin;s<u.xmax;s++)t[i+s]=e}}function B(t,e,i,s,n){const l=t.filter((t=>p(t)))[0];if(null==l)return null;const r=s?s.width:e.width,a=s?s.height:e.height,o=l.width,h=l.height,f=e.width/o,c=e.height/h,x={offset:i||{x:0,y:0},mosaic:s||e,block:{width:o,height:h}},m=l.pixelType,d=u.getPixelArrayConstructor(m),g=l.pixels.length,y=[];let w,k,A;for(let u=0;u<g;u++){k=new d(r*a);for(let e=0;e<c;e++)for(let i=0;i<f;i++){const s=t[e*f+i];p(s)&&(w=s.pixels[u],b(k,w,x,i,e,n))}y.push(k)}if(t.some((t=>null==t||t.mask&&t.mask.length>0))){A=new Uint8Array(r*a);for(let e=0;e<c;e++)for(let i=0;i<f;i++){const s=t[e*f+i];b(A,(s?s.mask:null)||(s?1:0),x,i,e,n)}}const M=new u({width:r,height:a,pixels:y,pixelType:m,mask:A});return M.updateStatistics(),M}function T(t,e,i){if(!p(t))return null;const{width:s,height:n}=t,l=e.x,r=e.y,a=i.width+l,o=i.height+r;if(l<0||r<0||a>s||o>n)return t;if(0===l&&0===r&&a===s&&o===n)return t;t.mask||(t.mask=new Uint8Array(s*n));const h=t.mask;for(let f=0;f<n;f++){const t=f*s;for(let e=0;e<s;e++)h[t+e]=f<r||f>=o||e<l||e>=a?0:1}return t.updateStatistics(),t}function C(t){if(0===t.size)return 0;let e=0,i=-1,s=0;const n=t.keys();let l=n.next();for(;!l.done;)s=t.get(l.value),s>e&&(i=l.value,e=s),l=n.next();return i}function P(t,e,i){if(0===i)return;const s=t.get(e);1===s?t.delete(e):t.set(e,s-1)}function S(t,e,i){0!==i&&t.set(e,t.has(e)?t.get(e)+1:1)}function F(t,e,i){let{x:s,y:n}=e;const{width:l,height:r}=i;if(0===s&&0===n&&r===t.height&&l===t.width)return t;const{width:a,height:o}=t,h=Math.max(0,n),f=Math.max(0,s),c=Math.min(s+l,a),x=Math.min(n+r,o);if(c<0||x<0||!p(t))return null;s=Math.max(0,-s),n=Math.max(0,-n);const{pixels:m,mask:d}=t,g=l*r,y=m.length,w=[];for(let p=0;p<y;p++){const e=m[p],i=u.createEmptyBand(t.pixelType,g);for(let t=h;t<x;t++){const r=t*a;let o=(t+n-h)*l+s;for(let t=f;t<c;t++)i[o++]=e[r+t]}w.push(i)}const k=new Uint8Array(g);for(let u=h;u<x;u++){const t=u*a;let e=(u+n-h)*l+s;for(let i=f;i<c;i++)k[e++]=d?d[t+i]:1}const A=new u({width:i.width,height:i.height,pixelType:t.pixelType,pixels:w,mask:k});return A.updateStatistics(),A}function I(t,e=!0){if(!p(t))return null;const{pixels:i,width:s,height:n,mask:l,pixelType:r}=t,a=[],o=Math.round(s/2),h=Math.round(n/2),f=n-1,c=s-1;for(let p=0;p<i.length;p++){const t=i[p],l=u.createEmptyBand(r,o*h);let x=0;for(let i=0;i<n;i+=2)for(let n=0;n<s;n+=2){const r=t[i*s+n];if(e){const e=n===c?r:t[i*s+n+1],a=i===f?r:t[i*s+n+s],o=n===c?a:i===f?e:t[i*s+n+s+1];l[x++]=(r+e+a+o)/4}else l[x++]=r}a.push(l)}let x=null;if(l){x=new Uint8Array(o*h);let t=0;for(let i=0;i<n;i+=2)for(let n=0;n<s;n+=2){const r=l[i*s+n];if(e){const e=n===c?r:l[i*s+n+1],a=i===f?r:l[i*s+n+s],o=n===c?a:i===f?e:l[i*s+n+s+1];x[t++]=r*e*a*o?1:0}else x[t++]=r}}return new u({width:o,height:h,pixelType:r,pixels:a,mask:x})}function G(t,e,i){if(!p(t))return null;const{width:s,height:n}=e;let{width:l,height:r}=t;const a=new Map,o={x:0,y:0},h=null==i?1:1+i;let f=t;for(let c=0;c<h;c++){const t=Math.ceil(l/s),i=Math.ceil(r/n);for(let l=0;l<i;l++){o.y=l*n;for(let i=0;i<t;i++){o.x=i*s;const t=F(f,o,e);a.set(`${c}/${l}/${i}`,t)}}c<h-1&&(f=I(f)),l=Math.round(l/2),r=Math.round(r/2)}return a}function R(t,e,i,s,n="nearest"){if(!p(t))return null;"majority"===n&&(t=function(t){if(!p(t))return null;const e=t.clone(),{width:i,height:s,pixels:n,mask:l}=t,r=n[0],a=e.pixels[0];for(let o=2;o<s-1;o++){const t=new Map;for(let s=o-2;s<o+2;s++)for(let e=0;e<4;e++){const n=s*i+e;S(t,r[n],l?l[n]:1)}a[o*i]=C(t),a[o*i+1]=a[o*i+2]=a[o*i];let e=3;for(;e<i-1;e++){let s=(o-2)*i+e+1;S(t,r[s],l?l[s]:1),s=(o-1)*i+e+1,S(t,r[s],l?l[s]:1),s=o*i+e+1,S(t,r[s],l?l[s]:1),s=(o+1)*i+e+1,S(t,r[s],l?l[s]:1),s=(o-2)*i+e-3,P(t,r[s],l?l[s]:1),s=(o-1)*i+e-3,P(t,r[s],l?l[s]:1),s=o*i+e-3,P(t,r[s],l?l[s]:1),s=(o+1)*i+e-3,P(t,r[s],l?l[s]:1),a[o*i+e]=C(t)}a[o*i+e+1]=a[o*i+e]}for(let o=0;o<i;o++)a[o]=a[i+o]=a[2*i+o],a[(s-1)*i+o]=a[(s-2)*i+o];return e.updateStatistics(),e}(t));const{pixels:l,mask:r,pixelType:a}=t,o=t.width,h=t.height,f=u.getPixelArrayConstructor(a),c=l.length,{width:x,height:m}=e,d=s.cols,g=s.rows,y=Math.ceil(x/d),w=Math.ceil(m/g);let k,A,M,v,U,b,B,T=!1;for(let u=0;u<i.length;u+=3)-1===i[u]&&-1===i[u+1]&&-1===i[u+2]&&(T=!0);const F=new Float32Array(x*m),I=new Float32Array(x*m);let G,R,j=0;const O="majority"===n?0:.5;for(let u=0;u<w;u++)for(let t=0;t<y;t++){k=12*(u*y+t),A=i[k],M=i[k+1],v=i[k+2],U=i[k+3],b=i[k+4],B=i[k+5];for(let e=0;e<g;e++){j=(u*g+e)*x+t*d,R=(e+.5)/g;for(let t=0;t<e;t++)G=(t+.5)/d,F[j+t]=Math.round((A*G+M*R+v)*o-O),I[j+t]=Math.round((U*G+b*R+B)*h-O)}k+=6,A=i[k],M=i[k+1],v=i[k+2],U=i[k+3],b=i[k+4],B=i[k+5];for(let e=0;e<g;e++){j=(u*g+e)*x+t*d,R=(e+.5)/g;for(let t=e;t<d;t++)G=(t+.5)/d,F[j+t]=Math.round((A*G+M*R+v)*o-O),I[j+t]=Math.round((U*G+b*R+B)*h-O)}}const V=(t,e)=>{for(let i=0;i<m;i++){k=i*x;for(let i=0;i<x;i++)F[k]<0||I[k]<0?t[k]=0:t[k]=e[F[k]+I[k]*o],k++}},_=[];let E;for(let u=0;u<c;u++)E=new f(x*m),V(E,l[u]),_.push(E);const z=new u({width:x,height:m,pixelType:a,pixels:_});if(r)z.mask=new Uint8Array(x*m),V(z.mask,r);else if(T){z.mask=new Uint8Array(x*m);for(let t=0;t<x*m;t++)z.mask[t]=F[t]<0||I[t]<0?0:1}return z.updateStatistics(),z}export{G as C,R as T,M as a,v as c,B as d,A as f,T as g,k as h,m as i,d as l,U as m,x as n,y as o,g as r,w as s,u};
